{"version":3,"file":"dx-chart-core.umd.js","sources":["../src/constants.js","../src/utils/scale.js","../src/plugins/scale/computeds.js","../src/plugins/layout-manager/computeds.js","../src/plugins/axis/computeds.js","../src/plugins/series/computeds.js","../src/plugins/stack/computeds.js","../src/plugins/animation/computeds.js","../src/utils/series.js","../src/utils/legend.js","../src/utils/event-tracker.js","../src/utils/hover-state.js"],"sourcesContent":["export const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const TOP = 'top';\nexport const BOTTOM = 'bottom';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const MIDDLE = 'middle';\nexport const END = 'end';\nexport const START = 'start';\n\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\n\nexport const ARGUMENT_DOMAIN = 'argument-domain';\nexport const VALUE_DOMAIN = 'value-domain';\n\nexport const HOVERED = 'hovered';\nexport const SELECTED = 'selected';\n","import { HORIZONTAL, VALUE_DOMAIN } from '../constants';\n\nexport const createScale = (\n  { domain, orientation },\n  width, height,\n  constructor,\n) => {\n  const scale = constructor();\n  return scale\n    .domain(domain)\n    .range(orientation === HORIZONTAL ? [0, width] : [height, 0]);\n};\n\nexport const getWidth = scale => (scale.bandwidth ? scale.bandwidth() : 0);\n\nexport const getValueDomainName = name => name || VALUE_DOMAIN;\n","import { extent } from 'd3-array';\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport { createScale, getValueDomainName } from '../../utils/scale';\nimport {\n  HORIZONTAL, VERTICAL, LINEAR, BAND, ARGUMENT_DOMAIN,\n} from '../../constants';\n\nconst isDefined = item => item !== undefined;\n\n// TODO: Property name should not contain \"axis\" part as it actually means domain.\nconst getSeriesValueDomainName = series => getValueDomainName(series.axisName);\n\nconst calculateDomainField = (items, domain, type) => (\n  type === BAND ? [...domain, ...items] : extent([...domain, ...extent(items)])\n);\n\nconst getArgument = point => point.argument;\n\nconst getValue = point => point.value;\n\nconst getCorrectAxisType = (type, points, getItem) => (\n  type || (points.length && typeof getItem(points[0]) === 'string' && BAND) || LINEAR\n);\n\nconst calculateDomains = (domains, seriesList) => {\n  seriesList.forEach((seriesItem) => {\n    const valueDomainName = getSeriesValueDomainName(seriesItem);\n    const { points } = seriesItem;\n    const argumentDomain = domains[ARGUMENT_DOMAIN];\n    const valueDomain = domains[valueDomainName];\n\n    const valueType = getCorrectAxisType(valueDomain.type, points, getValue);\n    const argumentType = getCorrectAxisType(argumentDomain.type, points, getArgument);\n\n    // TODO: This is a temporary workaround for Stack plugin.\n    // Once scales (or domains) are exposed for modification Stack will modify scale and\n    // this code will be removed.\n    const valueDomainItems = seriesItem.getValueDomain\n      ? seriesItem.getValueDomain(points) : points.map(getValue);\n    valueDomain.domain = calculateDomainField(\n      valueDomainItems,\n      valueDomain.domain,\n      valueType,\n    );\n    valueDomain.type = valueType;\n\n    argumentDomain.domain = calculateDomainField(\n      points.map(getArgument),\n      argumentDomain.domain,\n      argumentType,\n    );\n    argumentDomain.type = argumentType;\n  });\n};\n\nexport const computeExtension = (extension) => {\n  const defaultExtension = [\n    { type: LINEAR, constructor: scaleLinear },\n    { type: BAND, constructor: () => scaleBand().paddingInner(0.3).paddingOuter(0.15) },\n  ];\n  return extension.concat(defaultExtension);\n};\n\nconst collectDomains = (seriesList) => {\n  const domains = {\n    [ARGUMENT_DOMAIN]: { domain: [], orientation: HORIZONTAL },\n  };\n  seriesList.forEach((seriesItem) => {\n    const name = getSeriesValueDomainName(seriesItem);\n    const domain = domains[name] || { domain: [], orientation: VERTICAL };\n    domains[name] = domain;\n    if (seriesItem.isStartedFromZero && domain.domain.length === 0) {\n      domain.domain = [0];\n    }\n  });\n  return domains;\n};\n\nconst takeTypeFromAxesOptions = (domains, axes) => {\n  axes.forEach(({ name, type }) => {\n    const domain = domains[name];\n    if (domain) {\n      domain.type = type;\n    }\n  });\n};\n\nconst takeRestAxesOptions = (domains, axes) => {\n  axes.forEach(({\n    name, tickFormat, min, max,\n  }) => {\n    const domain = domains[name];\n    if (!domain) {\n      return;\n    }\n    domain.tickFormat = tickFormat;\n    if (domain.type !== BAND) {\n      domain.domain = [\n        isDefined(min) ? min : domain.domain[0],\n        isDefined(max) ? max : domain.domain[1],\n      ];\n    }\n  });\n};\n\nexport const computeDomains = (axes, series) => {\n  const result = collectDomains(series);\n  // Axes options are taken in two steps because *type* is required for domains calculation\n  // and other options must be applied after domains are calculated.\n  takeTypeFromAxesOptions(result, axes);\n  calculateDomains(result, series);\n  takeRestAxesOptions(result, axes);\n  return result;\n};\n\nexport const buildScales = (domains, scaleExtension, { width, height }) => {\n  const scales = {};\n  Object.entries(domains).forEach(([name, domain]) => {\n    const { constructor } = scaleExtension.find(item => item.type === domain.type);\n    scales[name] = createScale(domain, width, height, constructor);\n  });\n  return scales;\n};\n","const isEqual = (\n  { width: firstWidth, height: firstHeight },\n  { width: secondWidth, height: secondHeight },\n) => firstWidth === secondWidth && firstHeight === secondHeight;\n\nexport const bBoxes = (prevBBoxes, { bBox, placeholder }) => {\n  if (isEqual(prevBBoxes[placeholder] || {}, bBox)) return prevBBoxes;\n  return { ...prevBBoxes, [placeholder]: bBox };\n};\n","import { getWidth } from '../../utils/scale';\nimport {\n  HORIZONTAL, TOP, LEFT, MIDDLE, END, START,\n} from '../../constants';\n\nconst getTicks = scale => (scale.ticks ? scale.ticks() : scale.domain());\nconst getDominantBaseline = (orientation, position) => {\n  if (orientation === HORIZONTAL) {\n    return position === TOP ? 'baseline' : 'hanging';\n  }\n  return MIDDLE;\n};\nconst getTextAnchor = (orientation, position) => {\n  if (orientation === HORIZONTAL) {\n    return MIDDLE;\n  }\n  return position === LEFT ? END : START;\n};\n\nconst getFormat = (scale, tickFormat) => {\n  if (scale.tickFormat) {\n    return tickFormat ? tickFormat(scale) : scale.tickFormat();\n  }\n  return tick => tick;\n};\n\n// It is called for grid (which do not have labels) - how is it handled here?\nconst calculateAxisCoordinates = (\n  scale,\n  orientation,\n  position,\n  tickSize,\n  indentFromAxis,\n  tickFormat,\n) => {\n  const ticks = getTicks(scale);\n  const offset = getWidth(scale) / 2;\n  const dominantBaseline = getDominantBaseline(orientation, position);\n  const textAnchor = getTextAnchor(orientation, position);\n  const getTickCoordinates = (tick, index) => {\n    const coordinates = scale(tick) + offset;\n    if (orientation === HORIZONTAL) {\n      return {\n        dominantBaseline,\n        textAnchor,\n        x1: coordinates,\n        x2: coordinates,\n        y1: position === TOP ? -tickSize : 0,\n        y2: position === TOP ? 0 : tickSize,\n        text: getFormat(scale, tickFormat)(tick),\n        xText: coordinates,\n        yText: position === TOP ? -indentFromAxis : indentFromAxis,\n        key: index,\n      };\n    }\n    return {\n      dominantBaseline,\n      textAnchor,\n      y1: coordinates,\n      y2: coordinates,\n      x1: position === LEFT ? -tickSize : 0,\n      x2: position === LEFT ? 0 : tickSize,\n      text: getFormat(scale, tickFormat)(tick),\n      xText: position === LEFT ? -indentFromAxis : indentFromAxis,\n      yText: coordinates,\n      key: index,\n    };\n  };\n  return {\n    ticks: ticks.map(getTickCoordinates),\n  };\n};\n\nexport const axisCoordinates = (\n  domain,\n  scale,\n  position,\n  tickSize,\n  indentFromAxis,\n) => calculateAxisCoordinates(\n  scale,\n  domain.orientation,\n  position,\n  tickSize,\n  indentFromAxis,\n  // TODO: *tickFormat* belongs to axis rather then domain - take it from axis.\n  domain.tickFormat,\n);\n\nexport const axesData = (axes, axisProps) => [...axes, axisProps];\n","import {\n  symbol,\n  symbolCircle,\n  line,\n  curveMonotoneX,\n  area,\n  arc,\n  pie,\n} from 'd3-shape';\nimport { scaleOrdinal } from 'd3-scale';\nimport { ARGUMENT_DOMAIN } from '../../constants';\nimport { getWidth, getValueDomainName } from '../../utils/scale';\n\nconst getX = ({ x }) => x;\nconst getY = ({ y }) => y;\nconst getY1 = ({ y1 }) => y1;\n\nconst DEFAULT_POINT_SIZE = 7;\n\nexport const dArea = area()\n  .x(getX)\n  .y1(getY)\n  .y0(getY1);\n\nexport const dLine = line()\n  .x(getX)\n  .y(getY);\n\nexport const dSpline = line()\n  .x(getX)\n  .y(getY)\n  .curve(curveMonotoneX);\n\nexport const getPiePointTransformer = ({\n  innerRadius = 0, outerRadius = 1, argumentScale, valueScale, palette, points,\n}) => {\n  const x = Math.max(...argumentScale.range()) / 2;\n  const y = Math.max(...valueScale.range()) / 2;\n  const radius = Math.min(x, y);\n  const pieData = pie().sort(null).value(d => d.value)(points);\n  const inner = innerRadius * radius;\n  const outer = outerRadius * radius;\n  const gen = arc().innerRadius(inner).outerRadius(outer);\n  const colorScale = scaleOrdinal().range(palette);\n  return (point) => {\n    const { startAngle, endAngle } = pieData[point.index];\n    return {\n      ...point,\n      // TODO: It should be calculated in *pointComponent*.\n      d: gen.startAngle(startAngle).endAngle(endAngle)(),\n      color: point.color || colorScale(point.index),\n      x,\n      y,\n      innerRadius: inner,\n      outerRadius: outer,\n      startAngle,\n      endAngle,\n    };\n  };\n};\n\nexport const getAreaPointTransformer = ({ argumentScale, valueScale }) => {\n  const y1 = valueScale(0);\n  const offset = getWidth(argumentScale) / 2;\n  return point => ({\n    ...point,\n    x: argumentScale(point.argument) + offset,\n    y: valueScale(point.value),\n    y1,\n  });\n};\n\nexport const getBarPointTransformer = ({\n  argumentScale, valueScale, barWidth,\n}) => {\n  const y1 = valueScale(0);\n  const categoryWidth = getWidth(argumentScale);\n  const offset = categoryWidth * (1 - barWidth) / 2;\n  const width = categoryWidth * barWidth;\n  return point => ({\n    ...point,\n    x: argumentScale(point.argument) + offset,\n    y: valueScale(point.value),\n    y1,\n    width,\n  });\n};\n// Used for Bar grouping.\ngetBarPointTransformer.isBroad = true;\n\nexport const findSeriesByName = (\n  name, series,\n) => series.find(seriesItem => seriesItem.symbolName === name);\n\nexport const dBar = ({\n  x, y, y1, width,\n}) => ({\n  x, y: Math.min(y, y1), width: width || 2, height: Math.abs(y1 - y),\n});\n\nexport const pointAttributes = ({ size = DEFAULT_POINT_SIZE }) => {\n  const dPoint = symbol().size([size ** 2]).type(symbolCircle)();\n  return item => ({\n    // TODO: It should be calculated in *pointComponent*.\n    d: dPoint,\n    x: item.x,\n    y: item.y,\n  });\n};\n\nconst createNewUniqueName = name => name.replace(/\\d*$/, str => (str ? +str + 1 : 0));\n\nconst addItem = (list, item) => (list.find(obj => obj.uniqueName === item.uniqueName)\n  ? addItem(list, {\n    ...item,\n    uniqueName: createNewUniqueName(item.uniqueName),\n  })\n  : list.concat(item)\n);\n\n// TODO: Memoization is much needed here.\n// Though \"series\" list never persists, single \"series\" item most often does.\nconst createPoints = (argumentField, valueField, data) => {\n  const points = [];\n  data.forEach((dataItem, index) => {\n    const argument = dataItem[argumentField];\n    const value = dataItem[valueField];\n    if (argument !== undefined && value !== undefined) {\n      points.push({ argument, value, index });\n    }\n  });\n  return points;\n};\n\nexport const addSeries = (series, data, palette, props) => {\n  const points = createPoints(props.argumentField, props.valueField, data);\n  // It is used to generate unique series dependent attribute names for patterns.\n  // *symbolName* cannot be used as it cannot be part of DOM attribute name.\n  // TODO: Consider making *name* unique and then use it instead of *index*.\n  const index = series.length;\n  return addItem(series, {\n    ...props,\n    index,\n    points,\n    uniqueName: props.name,\n    palette, // TODO: For Pie only. Find a better place for it.\n    color: props.color || palette[index % palette.length],\n  });\n};\n\n// TODO: Memoization is much needed here by the same reason as in \"createPoints\".\n// Make \"scales\" persistent first.\nconst scalePoints = (series, scales) => {\n  const { getPointTransformer, ...rest } = series;\n  const transform = getPointTransformer({\n    ...series,\n    argumentScale: scales[ARGUMENT_DOMAIN],\n    valueScale: scales[getValueDomainName(series.axisName)],\n  });\n  return {\n    ...rest,\n    points: series.points.map(transform),\n  };\n};\n\nexport const scaleSeriesPoints = (series, scales) => series.map(\n  seriesItem => scalePoints(seriesItem, scales),\n);\n","import { stack } from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\n\n// \"Stack\" plugin relies on \"data\" and \"series\" getters and\n// knowledge about \"getPointTransformer\" and \"path\" functions behavior.\n\nconst buildSeriesToStackMap = (stacks) => {\n  const result = {};\n  stacks.forEach(({ series }, i) => {\n    series.forEach((name) => {\n      result[name] = i;\n    });\n  });\n  return result;\n};\n\nconst getStackedPointTransformer = (getPointTransformer) => {\n  const wrapper = (series) => {\n    const transform = getPointTransformer(series);\n    const { valueScale } = series;\n    return (point) => {\n      const ret = transform(point);\n      ret.y1 = valueScale(point.value0);\n      return ret;\n    };\n  };\n  // Preserve static fields of original transformer.\n  Object.assign(wrapper, getPointTransformer);\n  return wrapper;\n};\n\n// TODO: Temporary - see corresponding note in *computeDomains*.\nconst getValueDomain = (points) => {\n  const items = [];\n  points.forEach((point) => {\n    items.push(point.value, point.value0);\n  });\n  return items;\n};\n\nconst collectStacks = (seriesList, seriesToStackMap) => {\n  const stacksKeys = {};\n  const seriesPositions = {};\n  seriesList.forEach(({ name, valueField }) => {\n    const stackId = seriesToStackMap[name];\n    if (stackId === undefined) {\n      return;\n    }\n\n    if (!stacksKeys[stackId]) {\n      stacksKeys[stackId] = [];\n    }\n    seriesPositions[name] = stacksKeys[stackId].length;\n    stacksKeys[stackId].push(valueField);\n  });\n  // Stack cannot consist of single series.\n  Object.keys(stacksKeys).forEach((stackId) => {\n    if (stacksKeys[stackId].length === 1) {\n      delete stacksKeys[stackId];\n    }\n  });\n  return [stacksKeys, seriesPositions];\n};\n\nconst getStackedData = (stacksKeys, dataItems, offset, order) => {\n  const result = {};\n  Object.keys(stacksKeys).forEach((stackId) => {\n    result[stackId] = stack().keys(stacksKeys[stackId]).order(order).offset(offset)(dataItems);\n  });\n  return result;\n};\n\nconst buildStackedSeries = (series, dataItems) => {\n  const points = series.points.map((point) => {\n    const [value0, value] = dataItems[point.index];\n    return { ...point, value, value0 };\n  });\n  const stackedSeries = {\n    ...series,\n    points,\n  };\n  if (series.isStartedFromZero) {\n    stackedSeries.getPointTransformer = getStackedPointTransformer(series.getPointTransformer);\n    stackedSeries.getValueDomain = getValueDomain;\n  }\n  return stackedSeries;\n};\n\nconst applyStacking = (seriesList, dataItems, seriesToStackMap, offset, order) => {\n  const [stacksKeys, seriesPositions] = collectStacks(seriesList, seriesToStackMap);\n  if (Object.keys(stacksKeys).length === 0) {\n    return seriesList;\n  }\n  const stackedData = getStackedData(stacksKeys, dataItems, offset, order);\n  return seriesList.map((seriesItem) => {\n    const stackId = seriesToStackMap[seriesItem.name];\n    const stackData = stackedData[stackId];\n    if (!stackData) {\n      return seriesItem;\n    }\n    const position = seriesPositions[seriesItem.name];\n    return buildStackedSeries(seriesItem, stackData[position]);\n  });\n};\n\nconst getGroupName = (series, i, seriesToStackMap) => {\n  const stackId = seriesToStackMap[series.name];\n  return stackId >= 0 ? String(stackId) : `group-${i}`;\n};\n\nconst getGroupedPointTransformer = (getPointTransformer, groupCount, groupOffset) => {\n  const wrapper = (series) => {\n    const transform = getPointTransformer(series);\n    const { barWidth } = series;\n    const widthCoeff = 1 / groupCount;\n    const offsetCoeff = -(1 - barWidth) / 2 + groupOffset + widthCoeff * (1 - barWidth) / 2;\n    return (point) => {\n      const ret = transform(point);\n      ret.x += (ret.width / barWidth) * offsetCoeff;\n      ret.width *= widthCoeff;\n      return ret;\n    };\n  };\n  // Preserve static fields of original transformer.\n  Object.assign(wrapper, getPointTransformer);\n  return wrapper;\n};\n\nconst applyGrouping = (seriesList, seriesToStackMap) => {\n  const groups = new Set();\n  seriesList.forEach((seriesItem, i) => {\n    if (seriesItem.getPointTransformer.isBroad) {\n      groups.add(getGroupName(seriesItem, i, seriesToStackMap));\n    }\n  });\n  // There cannot be single group.\n  if (groups.size < 2) {\n    return seriesList;\n  }\n  const scale = scaleBand().domain(Array.from(groups)).range([0, 1]);\n  return seriesList.map((seriesItem, i) => {\n    if (!seriesItem.getPointTransformer.isBroad) {\n      return seriesItem;\n    }\n    const getPointTransformer = getGroupedPointTransformer(\n      seriesItem.getPointTransformer,\n      groups.size,\n      scale(getGroupName(seriesItem, i, seriesToStackMap)),\n    );\n    return {\n      ...seriesItem,\n      getPointTransformer,\n    };\n  });\n};\n\nexport const getStackedSeries = (seriesList, dataItems, { stacks, offset, order }) => {\n  const map = buildSeriesToStackMap(stacks);\n  const stackedSeriesList = applyStacking(seriesList, dataItems, map, offset, order);\n  const groupedSeriesList = applyGrouping(stackedSeriesList, map);\n  return groupedSeriesList;\n};\n","const ANIMATIONS = Symbol('animation');\n\nconst addKeyframe = (name, def) => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  const head = document.getElementsByTagName('head')[0]; // eslint-disable-line no-undef\n  let style = Array.from(head.getElementsByTagName('style'))\n    .find(node => node.dataset[ANIMATIONS]);\n  if (!style) {\n    style = document.createElement('style'); // eslint-disable-line no-undef\n    style.type = 'text/css';\n    style.dataset[ANIMATIONS] = true;\n    head.appendChild(style);\n  }\n  const content = style.textContent;\n  if (!content.includes(name)) {\n    style.textContent += `\\n@keyframes ${name} ${def}\\n`;\n  }\n};\n\nconst getAreaAnimationName = () => {\n  const name = 'animation_transform';\n  addKeyframe(name, '{ from { transform: scaleY(0); } }');\n  return name;\n};\n\nconst getScatterAnimationName = () => {\n  const name = 'animation_scatter';\n  addKeyframe(name, '{ 0% { opacity: 0; } 50% { opacity: 0; } 100% { opacity: 1 } }');\n  return name;\n};\n\nconst getPieAnimationName = () => {\n  const name = 'animation_pie';\n  addKeyframe(name, '{ from { transform: scale(0); } }');\n  return name;\n};\n\nconst getDefaultAreaAnimationOptions = () => '1s';\n\nconst getDefaultPieAnimationOptions = ({ index }) => `${0.7 + index * 0.1}s`;\n\nexport const getAreaAnimationStyle = (scales) => {\n  const animationStyle = {\n    transformOrigin: `0px ${scales.yScale.copy().clamp(true)(0)}px`,\n  };\n  const options = getDefaultAreaAnimationOptions();\n  return {\n    animation: `${getAreaAnimationName()} ${options}`,\n    ...animationStyle,\n  };\n};\n\nexport const getPieAnimationStyle = (scales, point) => {\n  const options = getDefaultPieAnimationOptions(point);\n  return {\n    animation: `${getPieAnimationName()} ${options}`,\n  };\n};\n\nexport const getScatterAnimationStyle = () => {\n  const options = getDefaultAreaAnimationOptions();\n  return {\n    animation: `${getScatterAnimationName()} ${options}`,\n  };\n};\n\nexport const buildAnimatedStyleGetter = (\n  style, getAnimationStyle, scales, point,\n) => {\n  const animationStyle = getAnimationStyle(scales, point);\n  return {\n    ...animationStyle,\n    ...style,\n  };\n};\n","import { area } from 'd3-shape';\nimport { dArea, dLine, dSpline } from '../plugins/series/computeds';\n\nconst isPointInRect = (x, y, x1, x2, y1, y2) => x1 <= x && x <= x2 && y1 <= y && y <= y2;\n\nconst LINE_TOLERANCE = 10;\n\n// This function is called from event handlers (when DOM is available) -\n// *window.document* can be accessed safely.\nconst createContext = () => document.createElement('canvas').getContext('2d'); // eslint-disable-line no-undef\n\n// For a start using browser canvas will suffice.\n// However a better and more clean solution should be found.\n// Can't d3 perform hit testing?\nconst createCanvasAbusingHitTesterCreator = makePath => (coordinates) => {\n  const ctx = createContext();\n  const path = makePath();\n  path.context(ctx);\n  path(coordinates);\n  return ([px, py]) => {\n    const hit = ctx.isPointInPath(px, py) ? {} : null;\n    if (hit) {\n      const point = coordinates.find(({ x, y }) => isPointInRect(\n        px, py,\n        x - LINE_TOLERANCE, x + LINE_TOLERANCE, y - LINE_TOLERANCE, y + LINE_TOLERANCE,\n      ));\n      if (point) {\n        hit.point = point.index;\n      }\n    }\n    return hit;\n  };\n};\n\nexport const createAreaHitTester = createCanvasAbusingHitTesterCreator(() => {\n  const path = area();\n  path.x(dArea.x());\n  path.y1(dArea.y1());\n  path.y0(dArea.y0());\n  return path;\n});\n\nexport const createLineHitTester = createCanvasAbusingHitTesterCreator(() => {\n  const path = area();\n  const getY = dLine.y();\n  path.x(dLine.x());\n  path.y1(point => getY(point) - LINE_TOLERANCE);\n  path.y0(point => getY(point) + LINE_TOLERANCE);\n  return path;\n});\n\nexport const createSplineHitTester = createCanvasAbusingHitTesterCreator(() => {\n  const path = area();\n  const getY = dSpline.y();\n  path.x(dSpline.x());\n  path.y1(point => getY(point) - LINE_TOLERANCE);\n  path.y0(point => getY(point) + LINE_TOLERANCE);\n  path.curve(dSpline.curve());\n  return path;\n});\n\nexport const createBarHitTester = coordinates => ([px, py]) => {\n  const point = coordinates.find(({\n    x, width, y, y1,\n  }) => isPointInRect(px, py, x, x + width, Math.min(y, y1), Math.max(y, y1)));\n  return point ? { point: point.index } : null;\n};\n\n// TODO: Use actual point size here!\nexport const createScatterHitTester = coordinates => ([px, py]) => {\n  const point = coordinates.find(({\n    x, y,\n  }) => isPointInRect(px, py, x - 10, x + 10, y - 10, y + 10));\n  return point ? { point: point.index } : null;\n};\n\nconst mapAngleTod3 = (angle) => {\n  const ret = angle + Math.PI / 2;\n  return ret >= 0 ? ret : ret + Math.PI * 2;\n};\n\nexport const createPieHitTester = coordinates => ([px, py]) => {\n  const point = coordinates.find(({\n    x, y, innerRadius, outerRadius, startAngle, endAngle,\n  }) => {\n    const dx = px - x;\n    const dy = py - y;\n    const r = Math.sqrt(dx * dx + dy * dy);\n    if (r < innerRadius || r > outerRadius) {\n      return null;\n    }\n    const angle = mapAngleTod3(Math.atan2(dy, dx));\n    return startAngle <= angle && angle <= endAngle;\n  });\n  return point ? { point: point.index } : null;\n};\n\nconst buildFilter = (targets) => {\n  const result = {};\n  targets.forEach(({ series, point }) => {\n    result[series] = result[series] || { points: {} };\n    if (point >= 0) {\n      result[series].points[point] = true;\n    } else {\n      result[series].self = true;\n    }\n  });\n  return result;\n};\n\nexport const changeSeriesState = (seriesList, targets, state) => {\n  if (targets.length === 0) {\n    return seriesList;\n  }\n  const filter = buildFilter(targets);\n  let matches = 0;\n  const result = seriesList.map((seriesItem) => {\n    const obj = filter[seriesItem.name];\n    if (!obj) {\n      return seriesItem;\n    }\n    matches += 1;\n    const props = {};\n    if (obj.self) {\n      props.state = state;\n    }\n    if (Object.keys(obj.points).length) {\n      props.points = seriesItem.points.map(\n        point => (obj.points[point.index] ? { ...point, state } : point),\n      );\n    }\n    return { ...seriesItem, ...props };\n  });\n  // This is to prevent false rerenders.\n  return matches > 0 ? result : seriesList;\n};\n","const getDefaultLegendItems = series => series.map(\n  ({ uniqueName: text, color }) => ({ text, color }),\n);\n\nconst getPieLegendItems = series => series[0]\n  .points.map(({ id: text, color }) => ({ text, color }));\n\n// The function supports special case when there is single Pie series.\n// There is no commom way to tell if series is of Pie type -\n// checking `seriesComponent` function name will suffice for now.\nconst isSinglePieSeriesCase = series => (\n  series.length === 1 && series[0].seriesComponent.name === 'SliceCollection'\n);\n\nexport const getLegendItems = series => (\n  (isSinglePieSeriesCase(series) ? getPieLegendItems : getDefaultLegendItems)(series)\n);\n","// This function is called from event handlers (when DOM is available) -\n// *window* can be accessed safely.\nconst getEventCoords = (e) => {\n  const { pageXOffset, pageYOffset } = window; // eslint-disable-line no-undef\n  const { left, top } = e.currentTarget.getBoundingClientRect();\n  return [\n    e.clientX - left - pageXOffset,\n    e.clientY - top - pageYOffset,\n  ];\n};\n\nconst buildEventHandler = (seriesList, handlers) => {\n  let hitTesters = null;\n\n  const createHitTesters = () => {\n    const obj = {};\n    seriesList.forEach((seriesItem) => {\n      obj[seriesItem.symbolName] = seriesItem.createHitTester(seriesItem.points);\n    });\n    return obj;\n  };\n\n  return (e) => {\n    const location = getEventCoords(e);\n    hitTesters = hitTesters || createHitTesters();\n    const targets = [];\n    seriesList.forEach((seriesItem) => {\n      const status = hitTesters[seriesItem.symbolName](location);\n      if (status) {\n        targets.push({ series: seriesItem.name, ...status });\n      }\n    });\n    const arg = { location, targets };\n    handlers.forEach(handler => handler(arg));\n  };\n};\n\nconst buildLeaveEventHandler = handlers => (e) => {\n  const location = getEventCoords(e);\n  const arg = { location, targets: [] };\n  handlers.forEach(handler => handler(arg));\n};\n\nexport const buildEventHandlers = (seriesList, { clickHandlers, pointerMoveHandlers }) => {\n  const handlers = {};\n  if (clickHandlers.length) {\n    handlers.click = buildEventHandler(seriesList, clickHandlers);\n  }\n  if (pointerMoveHandlers.length) {\n    handlers.pointermove = buildEventHandler(seriesList, pointerMoveHandlers);\n    handlers.pointerleave = buildLeaveEventHandler(pointerMoveHandlers);\n  }\n  return handlers;\n};\n","\nconst selectTarget = targets => (targets.length > 0 ? targets[targets.length - 1] : null);\n\n// Comparing by reference is not an option as Tracker always sends new objects.\n// On the other side Tracker cannot persist references as it actually operates with simple scalars\n// and constructs objects to provide info in a slightly more suitable way.\nconst compareTargets = (target1, target2) => (\n  (target1 && target2 && target1.series === target2.series && target1.point === target2.point)\n    || (!target1 && !target2)\n);\n\nexport const processPointerMove = (targets, currentTarget, notify) => {\n  const nextTarget = selectTarget(targets);\n  if (compareTargets(currentTarget, nextTarget)) {\n    return undefined;\n  }\n  if (notify) {\n    notify(nextTarget);\n  }\n  return nextTarget;\n};\n\n// It handles the case when point is hovered and series does not contain visual points.\n// Series then knows that it is also hovered and can represent the changed state.\nexport const getHoverTargets = (hover) => {\n  if (!hover) {\n    return [];\n  }\n  return hover.point >= 0 ? [{ series: hover.series }, hover] : [hover];\n};\n"],"names":["HORIZONTAL","VERTICAL","TOP","BOTTOM","LEFT","RIGHT","MIDDLE","END","START","LINEAR","BAND","ARGUMENT_DOMAIN","VALUE_DOMAIN","HOVERED","SELECTED","createScale","width","height","constructor","domain","orientation","scale","range","getWidth","bandwidth","getValueDomainName","name","isDefined","item","undefined","getSeriesValueDomainName","series","axisName","calculateDomainField","items","type","extent","getArgument","point","argument","getValue","value","getCorrectAxisType","points","getItem","length","calculateDomains","domains","seriesList","forEach","seriesItem","valueDomainName","argumentDomain","valueDomain","valueType","argumentType","valueDomainItems","getValueDomain","map","computeExtension","extension","defaultExtension","scaleLinear","scaleBand","paddingInner","paddingOuter","concat","collectDomains","isStartedFromZero","takeTypeFromAxesOptions","axes","takeRestAxesOptions","tickFormat","min","max","computeDomains","result","buildScales","scaleExtension","scales","Object","entries","find","isEqual","firstWidth","firstHeight","secondWidth","secondHeight","bBoxes","prevBBoxes","bBox","placeholder","getTicks","ticks","getDominantBaseline","position","getTextAnchor","getFormat","tick","calculateAxisCoordinates","tickSize","indentFromAxis","offset","dominantBaseline","textAnchor","getTickCoordinates","index","coordinates","x1","x2","y1","y2","text","xText","yText","key","axisCoordinates","axesData","axisProps","getX","x","getY","y","getY1","DEFAULT_POINT_SIZE","dArea","area","y0","dLine","line","dSpline","curve","curveMonotoneX","getPiePointTransformer","innerRadius","outerRadius","argumentScale","valueScale","palette","Math","radius","pieData","pie","sort","d","inner","outer","gen","arc","colorScale","scaleOrdinal","startAngle","endAngle","color","getAreaPointTransformer","getBarPointTransformer","barWidth","categoryWidth","isBroad","findSeriesByName","symbolName","dBar","abs","pointAttributes","size","dPoint","symbol","symbolCircle","createNewUniqueName","replace","str","addItem","list","obj","uniqueName","createPoints","argumentField","valueField","data","dataItem","push","addSeries","props","scalePoints","getPointTransformer","rest","transform","scaleSeriesPoints","buildSeriesToStackMap","stacks","i","getStackedPointTransformer","wrapper","ret","value0","assign","collectStacks","seriesToStackMap","stacksKeys","seriesPositions","stackId","keys","getStackedData","dataItems","order","stack","buildStackedSeries","stackedSeries","applyStacking","stackedData","stackData","getGroupName","String","getGroupedPointTransformer","groupCount","groupOffset","widthCoeff","offsetCoeff","applyGrouping","groups","Set","add","Array","from","getStackedSeries","stackedSeriesList","groupedSeriesList","ANIMATIONS","Symbol","addKeyframe","def","document","head","getElementsByTagName","style","node","dataset","createElement","appendChild","content","textContent","includes","getAreaAnimationName","getScatterAnimationName","getPieAnimationName","getDefaultAreaAnimationOptions","getDefaultPieAnimationOptions","getAreaAnimationStyle","animationStyle","transformOrigin","yScale","copy","clamp","options","animation","getPieAnimationStyle","getScatterAnimationStyle","buildAnimatedStyleGetter","getAnimationStyle","isPointInRect","LINE_TOLERANCE","createContext","getContext","createCanvasAbusingHitTesterCreator","ctx","path","makePath","context","px","py","hit","isPointInPath","createAreaHitTester","createLineHitTester","createSplineHitTester","createBarHitTester","createScatterHitTester","mapAngleTod3","angle","PI","createPieHitTester","dx","dy","r","sqrt","atan2","buildFilter","targets","self","changeSeriesState","state","filter","matches","getDefaultLegendItems","getPieLegendItems","id","isSinglePieSeriesCase","seriesComponent","getLegendItems","getEventCoords","e","window","pageXOffset","pageYOffset","currentTarget","getBoundingClientRect","left","top","clientX","clientY","buildEventHandler","handlers","hitTesters","createHitTesters","createHitTester","location","status","arg","handler","buildLeaveEventHandler","buildEventHandlers","clickHandlers","pointerMoveHandlers","click","pointermove","pointerleave","selectTarget","compareTargets","target1","target2","processPointerMove","notify","nextTarget","getHoverTargets","hover"],"mappings":"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"}