{"version":3,"file":"dx-react-chart.umd.js","sources":["../src/plugins/basic-data.jsx","../src/plugins/chart-core.jsx","../src/plugins/axes-layout.jsx","../src/plugins/space-filling-rects.jsx","../src/plugins/pane-layout.jsx","../src/plugins/layout-manager.jsx","../src/plugins/component-layout.jsx","../src/plugins/palette.jsx","../src/templates/layout.jsx","../src/templates/label.jsx","../src/utils/series-component.jsx","../src/utils/series-helper.jsx","../src/utils/patch-props.jsx","../src/chart.jsx","../src/templates/legend/marker.jsx","../src/plugins/legend.jsx","../src/plugins/title.jsx","../src/plugins/scale.jsx","../src/plugins/stack.jsx","../src/plugins/animation.jsx","../src/utils/with-states.jsx","../src/templates/pattern.jsx","../src/utils/with-pattern.jsx","../src/templates/series/area.jsx","../src/plugins/area-series.jsx","../src/templates/series/bar-collection.jsx","../src/templates/series/bar.jsx","../src/plugins/bar-series.jsx","../src/templates/series/path.jsx","../src/plugins/line-series.jsx","../src/templates/series/slice-collection.jsx","../src/templates/series/slice.jsx","../src/plugins/pie-series.jsx","../src/templates/series/point-collection.jsx","../src/templates/series/point.jsx","../src/plugins/scatter-series.jsx","../src/plugins/spline-series.jsx","../src/templates/axis/root.jsx","../src/templates/axis/tick.jsx","../src/templates/axis/label.jsx","../src/templates/axis/line.jsx","../src/plugins/axis.jsx","../src/templates/grid/line.jsx","../src/plugins/grid.jsx","../src/plugins/event-tracker.jsx","../src/plugins/hover-state.jsx","../src/plugins/selection-state.jsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\n\nexport const BasicData = ({ data }) => (\n  <Plugin name=\"Basis\">\n    <Getter name=\"data\" value={data} />\n    <Getter name=\"series\" value={[]} />\n    <Getter name=\"axes\" value={[]} />\n    <Getter name=\"getAnimatedStyle\" value={style => style} />\n  </Plugin>\n);\n\nBasicData.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n","import * as React from 'react';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { computeDomains, buildScales, scaleSeriesPoints } from '@devexpress/dx-chart-core';\n\nconst getDomains = ({ axes, series }) => computeDomains(axes, series);\n\nconst getScales = ({ domains, layouts, scaleExtension }) => buildScales(\n  domains, scaleExtension, layouts.pane,\n);\n\nconst getSeries = ({\n  series,\n  scales,\n  // TODO: The following are BarSeries specifics - remove them.\n  stacks,\n  scaleExtension,\n}) => scaleSeriesPoints(series, scales, stacks, scaleExtension);\n\nexport const ChartCore = () => (\n  <Plugin>\n    <Getter name=\"domains\" computed={getDomains} />\n    <Getter name=\"scales\" computed={getScales} />\n    <Getter name=\"series\" computed={getSeries} />\n  </Plugin>\n);\n","import * as React from 'react';\nimport {\n  TOP, BOTTOM, LEFT, RIGHT,\n} from '@devexpress/dx-chart-core';\nimport { Plugin, Template, TemplatePlaceholder } from '@devexpress/dx-react-core';\n\nexport const AxesLayout = () => (\n  <Plugin>\n    <Template name=\"canvas\">\n      <div id=\"center-center\" style={{ display: 'flex', flexDirection: 'column', flexGrow: 1 }}>\n        <div id={`${TOP}-axis-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n          <TemplatePlaceholder name={`${TOP}-${LEFT}-axis`} />\n          <TemplatePlaceholder name={`${TOP}-axis`} />\n          <TemplatePlaceholder name={`${TOP}-${RIGHT}-axis`} />\n        </div>\n        <div id=\"center-axis-container\" style={{ display: 'flex', flexDirection: 'row', flexGrow: 1 }}>\n          <TemplatePlaceholder name={`${LEFT}-axis`} />\n          <TemplatePlaceholder />\n          <TemplatePlaceholder name={`${RIGHT}-axis`} />\n        </div>\n        <div id={`${BOTTOM}-axis-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n          <TemplatePlaceholder name={`${BOTTOM}-${LEFT}-axis`} />\n          <TemplatePlaceholder name={`${BOTTOM}-axis`} />\n          <TemplatePlaceholder name={`${BOTTOM}-${RIGHT}-axis`} />\n        </div>\n      </div>\n    </Template>\n  </Plugin>\n);\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Plugin, Template, TemplateConnector } from '@devexpress/dx-react-core';\n\nexport class SpaceFillingRects extends React.PureComponent {\n  render() {\n    const { placeholders } = this.props;\n    return (\n      <Plugin name=\"SpaceFillingRects\">\n        {placeholders.map(name => (\n          <Template name={name} key={name}>\n            <TemplateConnector>\n              {({ layouts: positions }) => {\n                const [, horizontal, postfix] = name.split('-');\n                const { width } = positions[horizontal + (postfix ? `-${postfix}` : '')] || {};\n                return <div id={name} style={{ width }} />;\n              }}\n            </TemplateConnector>\n          </Template>\n        ))}\n      </Plugin>\n    );\n  }\n}\n\nSpaceFillingRects.propTypes = {\n  placeholders: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplateConnector,\n  TemplatePlaceholder,\n  Sizer,\n} from '@devexpress/dx-react-core';\n\n/* eslint-disable-next-line react/prefer-stateless-function */\nexport class PaneLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 800,\n      height: 600,\n    };\n  }\n\n  handleSizeUpdate({ width, height }, changeBBox) {\n    this.setState({ width, height });\n    changeBBox({ placeholder: 'pane', bBox: { width, height } });\n  }\n\n  render() {\n    const {\n      width,\n      height,\n    } = this.state;\n\n    return (\n      <Plugin name=\"PaneLayout\">\n        <Template name=\"canvas\">\n          {params => (\n            <TemplateConnector>\n              {(_, { changeBBox }) => (\n                <Sizer\n                  style={{ flex: 1, zIndex: 1 }}\n                  onSizeChange={size => this.handleSizeUpdate(size, changeBBox)}\n                >\n                  <div style={{ width: '100%' }}>\n                    <svg\n                      {...params}\n                      width={width}\n                      height={height}\n                      style={{\n                        position: 'absolute', left: 0, top: 0, overflow: 'visible',\n                      }}\n                    >\n                      <TemplatePlaceholder name=\"series\" />\n                    </svg>\n                  </div>\n                </Sizer>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Plugin,\n  Getter,\n  Action,\n  Template,\n  TemplatePlaceholder,\n  createStateHelper,\n} from '@devexpress/dx-react-core';\nimport { bBoxes } from '@devexpress/dx-chart-core';\n\nexport class LayoutManager extends React.Component {\n  constructor(props) {\n    super(props);\n    const { width, height } = this.props;\n\n    this.state = { bBoxes: { pane: { width, height } } };\n\n    const stateHelper = createStateHelper(this);\n\n    this.changeBBox = stateHelper.applyFieldReducer.bind(\n      stateHelper,\n      'bBoxes',\n      bBoxes,\n    );\n  }\n\n  render() {\n    const {\n      width, height, rootComponent: Root, ...restProps\n    } = this.props;\n    const { bBoxes: stateBBoxes } = this.state;\n\n    return (\n      <Plugin>\n        <Getter name=\"layouts\" value={stateBBoxes} />\n        <Action name=\"changeBBox\" action={this.changeBBox} />\n\n        <Template name=\"root\">\n          <Root\n            height={height}\n            width={width}\n            {...restProps}\n          >\n            <TemplatePlaceholder name=\"canvas\" />\n          </Root>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nLayoutManager.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n};\n\nLayoutManager.defaultProps = {\n  width: 0,\n};\n","import * as React from 'react';\nimport {\n  TOP, BOTTOM, LEFT, RIGHT,\n} from '@devexpress/dx-chart-core';\nimport { Plugin, Template, TemplatePlaceholder } from '@devexpress/dx-react-core';\n\nexport const ComponentLayout = () => (\n  <Plugin name=\"ComponentLayout\">\n    <Template name=\"canvas\">\n      <div id={`${TOP}-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n        <TemplatePlaceholder name={`${TOP}-${LEFT}`} />\n        <TemplatePlaceholder name={TOP} />\n        <TemplatePlaceholder name={`${TOP}-${LEFT}`} />\n      </div>\n      <div id=\"center-container\" style={{ display: 'flex', flexDirection: 'row', flexGrow: 1 }}>\n        <TemplatePlaceholder name={LEFT} />\n        <TemplatePlaceholder />\n        <TemplatePlaceholder name={RIGHT} />\n      </div>\n      <div id={`${BOTTOM}-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n        <TemplatePlaceholder name={`${BOTTOM}-${LEFT}`} />\n        <TemplatePlaceholder name={BOTTOM} />\n      </div>\n    </Template>\n  </Plugin>\n);\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\n\n// TODO: Remove \"palette\" getter from BasicData and add Palette to Chart\n// when \"paletteComputing\" is removed.\nexport class Palette extends React.PureComponent {\n  render() {\n    const { scheme } = this.props;\n    return (\n      <Plugin name=\"Palette\">\n        <Getter name=\"palette\" value={scheme} />\n      </Plugin>\n    );\n  }\n}\n\nPalette.propTypes = {\n  scheme: PropTypes.array.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class Root extends React.PureComponent {\n  render() {\n    const {\n      children, width, height, style, ...restProps\n    } = this.props;\n\n    return (\n      <div\n        style={{\n          ...style,\n          height: `${height}px`,\n          ...width ? { width: `${width}px` } : null,\n        }}\n        {...restProps}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\nRoot.propTypes = {\n  children: PropTypes.node,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  style: PropTypes.object,\n};\n\nRoot.defaultProps = {\n  children: undefined,\n  style: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class Label extends React.PureComponent {\n  render() {\n    return (\n      <text {...this.props} />\n    );\n  }\n}\n\nLabel.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n};\n","import * as React from 'react';\n\nconst makeBoundComponent = (Target, components, exposed) => {\n  class Component extends React.PureComponent {\n    render() {\n      return <Target {...components} {...this.props} />;\n    }\n  }\n  Component.components = Target.components;\n  Object.assign(Component, exposed);\n  return Component;\n};\n\nexport const withComponents = components => (Target) => {\n  const props = {};\n  const exposed = {};\n  Object.entries(Target.components).forEach(([fieldName, componentName]) => {\n    const component = components[componentName];\n    if (component && component !== Target[componentName]) {\n      props[fieldName] = component;\n    }\n    exposed[componentName] = component || Target[componentName];\n  });\n  return Object.keys(props).length > 0\n    ? makeBoundComponent(Target, props, exposed) : Target;\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Template,\n  Plugin,\n  Getter,\n  TemplatePlaceholder,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  findSeriesByName, addSeries, getValueDomainName, ARGUMENT_DOMAIN,\n} from '@devexpress/dx-chart-core';\nimport { withComponents } from './series-component';\n\n// May be it is better to say what props are passed along rather then what are NOT passed?\nconst getRenderProps = (series) => {\n  const {\n    name,\n    uniqueName,\n    axisName,\n    argumentField,\n    valueField,\n    palette,\n    symbolName,\n    isStartedFromZero,\n    getValueDomain, // TODO: Temporary - see corresponding note in *computeDomains*.\n    createHitTester,\n    ...restProps\n  } = series;\n\n  return restProps;\n};\n\nexport const declareSeries = (pluginName, { components, ...parameters }) => {\n  class Component extends React.PureComponent {\n    render() {\n      const { name } = this.props;\n      const symbolName = Symbol(name);\n      const seriesItem = {\n        ...parameters,\n        ...this.props,\n        symbolName,\n      };\n      const getSeries = ({ series, data, palette }) => addSeries(series, data, palette, seriesItem);\n      return (\n        <Plugin name={pluginName}>\n          <Getter name=\"series\" computed={getSeries} />\n          <Template name=\"series\">\n            <TemplatePlaceholder />\n            <TemplateConnector>\n              {({ series, scales, getAnimatedStyle }) => {\n                const currentSeries = findSeriesByName(symbolName, series);\n                const currentScales = {\n                  xScale: scales[ARGUMENT_DOMAIN],\n                  yScale: scales[getValueDomainName(currentSeries.axisName)],\n                };\n                const { seriesComponent: Series, points, ...props } = getRenderProps(currentSeries);\n                return (\n                  <Series\n                    coordinates={points}\n                    scales={currentScales}\n                    getAnimatedStyle={getAnimatedStyle}\n                    {...props}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          </Template>\n        </Plugin>\n      );\n    }\n  }\n  Component.propTypes = {\n    name: PropTypes.string,\n    /* eslint-disable react/no-unused-prop-types */\n    valueField: PropTypes.string.isRequired,\n    argumentField: PropTypes.string.isRequired,\n    /* eslint-enable react/no-unused-prop-types */\n  };\n  Component.defaultProps = {\n    name: 'defaultSeriesName',\n  };\n  Component.components = {};\n  if (components.Path) {\n    Component.components.seriesComponent = 'Path';\n  }\n  if (components.Point) {\n    Component.components.pointComponent = 'Point';\n  }\n  return withComponents(components)(Component);\n};\n","import * as React from 'react';\n\nexport const withPatchedProps = patch => (Target) => {\n  class Component extends React.PureComponent {\n    render() {\n      const props = patch(this.props);\n      return <Target {...props} />;\n    }\n  }\n  return Component;\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { PluginHost } from '@devexpress/dx-react-core';\nimport {\n  TOP, BOTTOM, LEFT, RIGHT,\n} from '@devexpress/dx-chart-core';\n\nimport { BasicData } from './plugins/basic-data';\nimport { ChartCore } from './plugins/chart-core';\nimport { AxesLayout } from './plugins/axes-layout';\nimport { SpaceFillingRects } from './plugins/space-filling-rects';\nimport { PaneLayout } from './plugins/pane-layout';\nimport { LayoutManager } from './plugins/layout-manager';\nimport { ComponentLayout } from './plugins/component-layout';\nimport { Palette } from './plugins/palette';\nimport { Root } from './templates/layout';\nimport { Label } from './templates/label';\nimport { withComponents } from './utils';\n\nclass RawChart extends React.PureComponent {\n  render() {\n    const {\n      data,\n      width,\n      height,\n      children,\n      rootComponent,\n      ...restProps\n    } = this.props;\n    return ((\n      <PluginHost>\n        <BasicData data={data} />\n        <Palette scheme={[]} />\n        <LayoutManager\n          width={width}\n          height={height}\n          rootComponent={rootComponent}\n          {...restProps}\n        />\n        <PaneLayout />\n        <AxesLayout />\n        <ComponentLayout />\n        <SpaceFillingRects placeholders={[\n          `${TOP}-${LEFT}`,\n          `${TOP}-${RIGHT}`,\n          `${BOTTOM}-${LEFT}`,\n          `${BOTTOM}-${RIGHT}`,\n          `${TOP}-${LEFT}-axis`,\n          `${TOP}-${RIGHT}-axis`,\n          `${BOTTOM}-${LEFT}-axis`,\n          `${BOTTOM}-${RIGHT}-axis`,\n        ]}\n        />\n        {children}\n        <ChartCore />\n\n      </PluginHost>\n    ));\n  }\n}\nRawChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  children: PropTypes.node,\n};\n\nRawChart.defaultProps = {\n  height: 500,\n  width: undefined,\n  children: null,\n};\n\nRawChart.components = {\n  rootComponent: 'Root',\n};\n\nexport const Chart = withComponents({ Root })(RawChart);\nChart.Label = Label;\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class Marker extends React.PureComponent {\n  render() {\n    const { color, ...restProps } = this.props;\n    return (\n      <svg fill={color} width=\"10\" height=\"10\" {...restProps}>\n        <circle r={5} cx={5} cy={5} {...restProps} />\n      </svg>);\n  }\n}\n\nMarker.propTypes = {\n  color: PropTypes.string,\n};\n\nMarker.defaultProps = {\n  color: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Plugin,\n  TemplateConnector,\n  Template,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport { getLegendItems } from '@devexpress/dx-chart-core';\nimport { Marker } from '../templates/legend/marker';\nimport { withComponents } from '../utils';\n\nclass RawLegend extends React.PureComponent {\n  render() {\n    const {\n      markerComponent: MarkerComponent,\n      labelComponent: Label,\n      rootComponent: Root,\n      itemComponent: Item,\n      position,\n      getItems,\n    } = this.props;\n    const placeholder = position;\n    return (\n      <Plugin name=\"Legend\">\n        <Template name={placeholder}>\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {getters => (\n              <Root name={`legend-${placeholder}`}>\n                {getItems(getters).map(({ text, color }) => (\n                  <Item key={text}>\n                    <MarkerComponent name={text} color={color} />\n                    <Label text={text} />\n                  </Item>\n                ))}\n              </Root>\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nRawLegend.propTypes = {\n  markerComponent: PropTypes.func.isRequired,\n  labelComponent: PropTypes.func.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  position: PropTypes.string,\n  getItems: PropTypes.func,\n};\n\nRawLegend.defaultProps = {\n  position: 'right',\n  getItems: ({ series }) => getLegendItems(series),\n};\n\nRawLegend.components = {\n  rootComponent: 'Root',\n  itemComponent: 'Item',\n  markerComponent: 'Marker',\n  labelComponent: 'Label',\n};\n\nexport const Legend = withComponents({ Marker })(RawLegend);\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\n\nexport class Title extends React.PureComponent {\n  render() {\n    const {\n      textComponent: Text,\n      text,\n      position,\n      ...restProps\n    } = this.props;\n    const placeholder = position;\n    return (\n      <Plugin name=\"Title\">\n        <Template name={placeholder}>\n          <TemplatePlaceholder />\n          <Text text={text} {...restProps} />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTitle.propTypes = {\n  textComponent: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  position: PropTypes.string,\n};\n\nTitle.defaultProps = {\n  position: 'top',\n};\n\nTitle.components = {\n  textComponent: 'Text',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { computeExtension } from '@devexpress/dx-chart-core';\n\nexport class Scale extends React.PureComponent {\n  render() {\n    const { extensions } = this.props;\n    return (\n      <Plugin name=\"Scale\">\n        <Getter name=\"scaleExtension\" value={computeExtension(extensions)} />\n      </Plugin>\n    );\n  }\n}\n\nScale.propTypes = {\n  extensions: PropTypes.arrayOf(PropTypes.shape({\n    type: PropTypes.string,\n    constructor: PropTypes.func,\n  })),\n};\n\nScale.defaultProps = {\n  extensions: [],\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { getStackedSeries } from '@devexpress/dx-chart-core';\nimport {\n  stackOrderNone,\n  stackOffsetDiverging,\n} from 'd3-shape';\n\nexport class Stack extends React.PureComponent {\n  render() {\n    const { stacks, offset, order } = this.props;\n    const params = { stacks, offset, order };\n    const getSeries = ({ series, data }) => getStackedSeries(series, data, params);\n    return (\n      <Plugin name=\"Stack\">\n        <Getter name=\"series\" computed={getSeries} />\n      </Plugin>\n    );\n  }\n}\n\nStack.propTypes = {\n  stacks: PropTypes.arrayOf(PropTypes.shape({\n    series: PropTypes.arrayOf(PropTypes.string).isRequired,\n  })),\n  offset: PropTypes.func,\n  order: PropTypes.func,\n};\n\nStack.defaultProps = {\n  stacks: [],\n  offset: stackOffsetDiverging,\n  order: stackOrderNone,\n};\n","import * as React from 'react';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { buildAnimatedStyleGetter } from '@devexpress/dx-chart-core';\n\n/* eslint-disable-next-line react/prefer-stateless-function */\nexport class Animation extends React.PureComponent {\n  render() {\n    return (\n      <Plugin name=\"Animation\">\n        <Getter name=\"getAnimatedStyle\" value={buildAnimatedStyleGetter} />\n      </Plugin>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport const withStates = states => (Component) => {\n  class ComponentWithStates extends React.PureComponent {\n    render() {\n      const { state, ...restProps } = this.props;\n      const stateFunc = states[state];\n      const result = stateFunc ? stateFunc(restProps) : restProps;\n      return React.isValidElement(result) ? result : <Component {...result} />;\n    }\n  }\n  ComponentWithStates.propTypes = {\n    state: PropTypes.string,\n  };\n  ComponentWithStates.defaultProps = {\n    state: undefined,\n  };\n  return ComponentWithStates;\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class Pattern extends React.PureComponent {\n  render() {\n    const {\n      id, size, color, opacity,\n    } = this.props;\n    return (\n      <defs>\n        <pattern\n          id={id}\n          width={size}\n          height={size}\n          patternUnits=\"userSpaceOnUse\"\n        >\n          <rect x={0} y={0} width={size} height={size} fill={color} opacity={opacity} />\n          <path\n            d={`M ${size / 2} ${-size / 2} L ${-size / 2} ${size / 2} M 0 ${size} L ${size} 0 M ${size * 1.5} ${size / 2} L ${size / 2} ${size * 1.5}`}\n            strokeWidth={2}\n            stroke={color}\n          />\n        </pattern>\n      </defs>\n    );\n  }\n}\n\nPattern.propTypes = {\n  id: PropTypes.string.isRequired,\n  size: PropTypes.number,\n  color: PropTypes.string.isRequired,\n  opacity: PropTypes.number,\n};\n\nPattern.defaultProps = {\n  size: 6,\n  opacity: 0.75,\n};\n","import * as React from 'react';\nimport { Pattern } from '../templates/pattern';\n\n// Function is returned (not PureComponent descendant) because\n// result is invoked as function (not as React component).\nexport const withPattern = (getPatternId, props) => Target => ({ color, ...restProps }) => {\n  const patternId = getPatternId(restProps);\n  return (\n    <React.Fragment>\n      <Target\n        fill={`url(#${patternId})`}\n        {...restProps}\n      />\n      <Pattern\n        id={patternId}\n        color={color}\n        {...props}\n      />\n    </React.Fragment>\n  );\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getAreaAnimationStyle, HOVERED, SELECTED } from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\nimport { withPattern } from '../../utils/with-pattern';\n\nclass RawArea extends React.PureComponent {\n  render() {\n    const {\n      path,\n      coordinates,\n      color,\n      index,\n      style,\n      getAnimatedStyle,\n      scales,\n      ...restProps\n    } = this.props;\n    return (\n      <path\n        d={path(coordinates)}\n        fill={color}\n        opacity={0.5}\n        style={getAnimatedStyle(style, getAreaAnimationStyle, scales)}\n        {...restProps}\n      />\n    );\n  }\n}\n\nRawArea.propTypes = {\n  path: PropTypes.func.isRequired,\n  coordinates: PropTypes.array.isRequired,\n  color: PropTypes.string,\n  style: PropTypes.object,\n};\n\nRawArea.defaultProps = {\n  color: undefined,\n  style: undefined,\n};\n\nexport const Area = withStates({\n  [HOVERED]: withPattern(\n    ({ index }) => `series-${index}-hover`, { opacity: 0.75 },\n  )(RawArea),\n  [SELECTED]: withPattern(\n    ({ index }) => `series-${index}-selection`, { opacity: 0.5 },\n  )(RawArea),\n})(RawArea);\n","import {\n  dArea as path,\n  getAreaPointTransformer as getPointTransformer,\n  createAreaHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { Area as Path } from '../templates/series/area';\n\nexport const AreaSeries = declareSeries('AreaSeries', {\n  components: { Path },\n  path,\n  isStartedFromZero: true,\n  getPointTransformer,\n  createHitTester,\n});\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n// TODO: Is it fine to have it hard coded or should there be `path` property?\nimport { getAreaAnimationStyle, dBar } from '@devexpress/dx-chart-core';\n\nexport class BarCollection extends React.PureComponent {\n  render() {\n    const {\n      pointComponent: Point,\n      path, // Not used - see note above.\n      coordinates,\n      index,\n      style,\n      scales,\n      getAnimatedStyle,\n      state,\n      ...restProps\n    } = this.props;\n    return (coordinates.map(item => (\n      <Point\n        key={item.index.toString()}\n        style={getAnimatedStyle(style, getAreaAnimationStyle, scales)}\n        seriesIndex={index}\n        {...restProps}\n        {...dBar(item)}\n        {...item}\n      />\n    )));\n  }\n}\n\nBarCollection.propTypes = {\n  pointComponent: PropTypes.func.isRequired,\n  style: PropTypes.object,\n};\n\nBarCollection.defaultProps = {\n  style: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { HOVERED, SELECTED } from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\nimport { withPattern } from '../../utils/with-pattern';\n\nclass RawBar extends React.PureComponent {\n  render() {\n    const {\n      argument, value, index, seriesIndex, barWidth, color, ...restProps\n    } = this.props;\n    return (\n      <rect fill={color} {...restProps} />\n    );\n  }\n}\n\nRawBar.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n  color: PropTypes.string,\n};\n\nRawBar.defaultProps = {\n  color: undefined,\n};\n\nexport const Bar = withStates({\n  [HOVERED]: withPattern(\n    ({ seriesIndex, index }) => `series-${seriesIndex}-point-${index}-hover`, { opacity: 0.75 },\n  )(RawBar),\n  [SELECTED]: withPattern(\n    ({ seriesIndex, index }) => `series-${seriesIndex}-point-${index}-selection`, { opacity: 0.5 },\n  )(RawBar),\n})(RawBar);\n","import {\n  getBarPointTransformer as getPointTransformer,\n  createBarHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { BarCollection as Path } from '../templates/series/bar-collection';\nimport { Bar as Point } from '../templates/series/bar';\n\nexport const BarSeries = declareSeries('BarSeries', {\n  components: { Path, Point },\n  isStartedFromZero: true,\n  getPointTransformer,\n  createHitTester,\n});\n\nBarSeries.defaultProps = {\n  barWidth: 0.9,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getAreaAnimationStyle, HOVERED, SELECTED } from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\n\nclass RawPath extends React.PureComponent {\n  render() {\n    const {\n      path,\n      coordinates,\n      color,\n      index,\n      style,\n      getAnimatedStyle,\n      scales,\n      ...restProps\n    } = this.props;\n    return (\n      <path\n        d={path(coordinates)}\n        fill=\"none\"\n        strokeWidth={2}\n        stroke={color}\n        style={getAnimatedStyle(style, getAreaAnimationStyle, scales)}\n        {...restProps}\n      />\n    );\n  }\n}\n\nRawPath.propTypes = {\n  path: PropTypes.func.isRequired,\n  coordinates: PropTypes.array.isRequired,\n  color: PropTypes.string,\n  style: PropTypes.object,\n};\n\nRawPath.defaultProps = {\n  color: undefined,\n  style: undefined,\n};\n\nexport const Path = withStates({\n  [HOVERED]: props => ({ strokeWidth: 4, ...props }),\n  [SELECTED]: props => ({ strokeWidth: 4, ...props }),\n})(RawPath);\n","import {\n  dLine as path,\n  getAreaPointTransformer as getPointTransformer,\n  createLineHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { Path } from '../templates/series/path';\n\nexport const LineSeries = declareSeries('LineSeries', {\n  components: { Path },\n  path,\n  getPointTransformer,\n  createHitTester,\n});\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getPieAnimationStyle } from '@devexpress/dx-chart-core';\n\n// TODO: Is it fine to have it hard coded or should there be `path` property?\nexport class SliceCollection extends React.PureComponent {\n  render() {\n    const {\n      pointComponent: Point,\n      path, // Not used - see note above.\n      coordinates,\n      index,\n      uniqueName,\n      style,\n      getAnimatedStyle,\n      scales,\n      innerRadius,\n      outerRadius,\n      state,\n      ...restProps\n    } = this.props;\n    return (\n      <g transform={`translate(${coordinates[0].x} ${coordinates[0].y})`}>\n        {coordinates.map(item => (\n          <Point\n            key={item.index.toString()}\n            style={getAnimatedStyle(style, getPieAnimationStyle, scales, item)}\n            seriesIndex={index}\n            {...restProps}\n            {...item}\n          />\n        ))}\n      </g>);\n  }\n}\n\nSliceCollection.propTypes = {\n  pointComponent: PropTypes.func.isRequired,\n  style: PropTypes.object,\n};\n\nSliceCollection.defaultProps = {\n  style: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { HOVERED, SELECTED } from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\nimport { withPattern } from '../../utils/with-pattern';\n\nclass RawSlice extends React.PureComponent {\n  render() {\n    const {\n      argument, value, index, seriesIndex, innerRadius, outerRadius, startAngle, endAngle,\n      x, y, d, color, ...restProps\n    } = this.props;\n    return (\n      <path\n        fill={color}\n        stroke=\"none\"\n        d={d}\n        {...restProps}\n      />\n    );\n  }\n}\n\nRawSlice.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  d: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  style: PropTypes.object,\n  color: PropTypes.string,\n};\n\nRawSlice.defaultProps = {\n  style: {},\n  color: undefined,\n};\n\nexport const Slice = withStates({\n  [HOVERED]: withPattern(\n    ({ seriesIndex, index }) => `series-${seriesIndex}-point-${index}-hover`, { opacity: 0.75 },\n  )(RawSlice),\n  [SELECTED]: withPattern(\n    ({ seriesIndex, index }) => `series-${seriesIndex}-point-${index}-selection`, { opacity: 0.5 },\n  )(RawSlice),\n})(RawSlice);\n","import {\n  getPiePointTransformer as getPointTransformer,\n  createPieHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { SliceCollection as Path } from '../templates/series/slice-collection';\nimport { Slice as Point } from '../templates/series/slice';\n\nexport const PieSeries = declareSeries('PieSeries', {\n  components: { Path, Point },\n  getPointTransformer,\n  createHitTester,\n});\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n// TODO: Is it fine to have it hard coded or should there be `path` property?\nimport { pointAttributes, getScatterAnimationStyle } from '@devexpress/dx-chart-core';\n\nexport class PointCollection extends React.PureComponent {\n  render() {\n    const {\n      pointComponent: Point,\n      path, // Not used - see note above.\n      coordinates,\n      point = {},\n      style,\n      getAnimatedStyle,\n      scales,\n      state,\n      ...restProps\n    } = this.props;\n    const getAttributes = pointAttributes(point);\n    return (coordinates.map(item => (\n      <Point\n        key={item.index.toString()}\n        style={getAnimatedStyle(style, getScatterAnimationStyle, scales)}\n        {...restProps}\n        {...getAttributes(item)}\n        {...item}\n      />\n    )));\n  }\n}\n\nPointCollection.propTypes = {\n  pointComponent: PropTypes.func.isRequired,\n  style: PropTypes.object,\n};\n\nPointCollection.defaultProps = {\n  style: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { HOVERED, SELECTED } from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\n\nclass RawPoint extends React.PureComponent {\n  render() {\n    const {\n      argument, value, index, x, y, color, ...restProps\n    } = this.props;\n    // *d* attribute is calculated during points scaling.\n    // TODO: Do it here - d={path().size(size).type(type)()}\n    return (\n      <path\n        fill={color}\n        stroke=\"none\"\n        transform={`translate(${x} ${y})`}\n        {...restProps}\n      />\n    );\n  }\n}\n\nRawPoint.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n  color: PropTypes.string,\n};\n\nRawPoint.defaultProps = {\n  color: undefined,\n};\n\nexport const Point = withStates({\n  [HOVERED]: ({ color, ...restProps }) => ({\n    stroke: color,\n    strokeWidth: 4,\n    fill: 'none',\n    // size: 12, Awaiting TODO from above.\n    ...restProps,\n  }),\n  [SELECTED]: ({ color, ...restProps }) => ({\n    stroke: color,\n    strokeWidth: 4,\n    fill: 'none',\n    // size: 12, Awaiting TODO from above.\n    ...restProps,\n  }),\n})(RawPoint);\n","import {\n  getAreaPointTransformer as getPointTransformer,\n  createScatterHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { PointCollection as Path } from '../templates/series/point-collection';\nimport { Point } from '../templates/series/point';\n\nexport const ScatterSeries = declareSeries('ScatterSeries', {\n  components: { Path, Point },\n  getPointTransformer,\n  createHitTester,\n});\n","import {\n  dSpline as path,\n  getAreaPointTransformer as getPointTransformer,\n  createSplineHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { Path } from '../templates/series/path';\n\nexport const SplineSeries = declareSeries('SplineSeries', {\n  components: { Path },\n  path,\n  getPointTransformer,\n  createHitTester,\n});\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class Root extends React.PureComponent {\n  render() {\n    const {\n      x, y, refsHandler, children, ...restProps\n    } = this.props;\n    return (\n      <g\n        ref={refsHandler}\n        transform={`translate(${x} ${y})`}\n        {...restProps}\n      >\n        {children}\n      </g>\n    );\n  }\n}\n\nRoot.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  refsHandler: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class Tick extends React.PureComponent {\n  render() {\n    const {\n      x1, x2, y1, y2, ...restProps\n    } = this.props;\n    return (\n      <path\n        d={`M ${x1} ${y1} L ${x2} ${y2}`}\n        {...restProps}\n      />\n    );\n  }\n}\n\nTick.propTypes = {\n  x1: PropTypes.number.isRequired,\n  x2: PropTypes.number.isRequired,\n  y1: PropTypes.number.isRequired,\n  y2: PropTypes.number.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class Label extends React.PureComponent {\n  render() {\n    const {\n      text, x, y, dominantBaseline, textAnchor, ...restProps\n    } = this.props;\n\n    return (\n      <text\n        dominantBaseline={dominantBaseline}\n        textAnchor={textAnchor}\n        x={x}\n        y={y}\n        {...restProps}\n      >\n        {text}\n      </text>\n    );\n  }\n}\n\nLabel.propTypes = {\n  text: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  dominantBaseline: PropTypes.string.isRequired,\n  textAnchor: PropTypes.string.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class Line extends React.PureComponent {\n  render() {\n    const {\n      width, height, orientation, ...restProps\n    } = this.props;\n    return (\n      <path\n        d={`M 0 0 L ${orientation === 'horizontal' ? width : 0} ${orientation === 'horizontal' ? 0 : height}`}\n        {...restProps}\n      />\n    );\n  }\n}\n\nLine.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  orientation: PropTypes.string.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Plugin,\n  TemplateConnector,\n  Template,\n  TemplatePlaceholder,\n  Getter,\n} from '@devexpress/dx-react-core';\nimport {\n  axisCoordinates, HORIZONTAL, LEFT, BOTTOM, ARGUMENT_DOMAIN, getValueDomainName, axesData,\n} from '@devexpress/dx-chart-core';\nimport { Root } from '../templates/axis/root';\nimport { Tick } from '../templates/axis/tick';\nimport { Label } from '../templates/axis/label';\nimport { Line } from '../templates/axis/line';\nimport { withPatchedProps, withComponents } from '../utils';\n\nconst getZeroCoord = () => 0;\nconst getCorrectSize = position => ((position === 'left' || position === 'top') ? coord => -coord : (coord, side) => side + coord);\nconst getCorrection = position => ((position === 'left' || position === 'top') ? coord => coord : getZeroCoord);\nconst getCurrentSize = (_, side) => side;\n\nclass RawAxis extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      xCorrection: 0,\n      yCorrection: 0,\n    };\n    this.createRefsHandler = this.createRefsHandler.bind(this);\n  }\n\n  createRefsHandler(placeholder, changeBBox, {\n    getWidth, getHeight, getXCorrection, getYCorrection,\n  }) {\n    return (el) => {\n      if (!el) {\n        return;\n      }\n      const {\n        width, height, x, y,\n      } = el.getBBox();\n      const { width: stateWidth, height: stateHeight } = this.state;\n\n      if (width === stateWidth && height === stateHeight) return;\n      changeBBox({\n        placeholder,\n        bBox: {\n          width: getWidth(x, width),\n          height: getHeight(y, height),\n        },\n      });\n      this.setState({\n        width,\n        height,\n        xCorrection: getXCorrection(x),\n        yCorrection: getYCorrection(y),\n      });\n    };\n  }\n\n  calculateLayout(width, height, defaultWidth, defaultHeight) {\n    const calculatedWidth = width || defaultWidth;\n    const calculatedHeight = height || defaultHeight;\n    const {\n      width: containerWidth,\n      height: containerHeight,\n    } = (this.node && this.node.getBoundingClientRect()) || {};\n\n    return {\n      width: containerWidth || calculatedWidth,\n      height: containerHeight || calculatedHeight,\n    };\n  }\n\n  render() {\n    const {\n      tickSize,\n      position,\n      name,\n      indentFromAxis,\n      rootComponent: RootComponent,\n      tickComponent: TickComponent,\n      labelComponent: LabelComponent,\n      lineComponent: LineComponent,\n    } = this.props;\n    const getAxes = ({ axes }) => axesData(axes, this.props);\n    return (\n      <Plugin name=\"Axis\">\n        <Getter name=\"axes\" computed={getAxes} />\n        <Template name={`${position}-axis`}>\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              domains,\n              scales,\n              layouts,\n            }, {\n              changeBBox,\n            }) => {\n              // TODO: Take axis from \"axes\" getter rather then from closure.\n              const placeholder = `${position}-axis`;\n              const domain = domains[name];\n              const scale = scales[name];\n              // TODO_DEBUG\n              if (!domain) { throw new Error(`domain is not found: ${name}`); }\n              // TODO_DEBUG\n              const { orientation } = domain;\n              const { width: widthCalculated, height: heightCalculated } = layouts[placeholder]\n                    || { width: 0, height: 0 };\n\n              const {\n                width: widthPostCalculated,\n                height: heightPostCalculated,\n              } = this.calculateLayout(\n                widthCalculated,\n                heightCalculated,\n                0,\n                0,\n              );\n              // Isn't it too late to adjust sizes?\n              const postCalculatedScale = scale.copy().range(\n                orientation === HORIZONTAL ? [0, widthPostCalculated] : [heightPostCalculated, 0],\n              );\n              const coordinates = axisCoordinates(\n                // TODO: Only *orientation* and *tickFormat* are taken from *domain* -\n                // take *tickFormat* directly from props.\n                domain,\n                postCalculatedScale,\n                position,\n                tickSize,\n                indentFromAxis,\n              );\n              const {\n                xCorrection,\n                yCorrection,\n              } = this.state;\n\n              return (\n                <div\n                  style={{\n                    position: 'relative',\n                    width: orientation === HORIZONTAL ? undefined : widthCalculated,\n                    height: orientation === HORIZONTAL ? heightCalculated : null,\n                    flexGrow: orientation === HORIZONTAL ? 1 : undefined,\n                  }}\n                  ref={(node) => { this.node = node; }}\n                >\n                  <svg\n                    width={widthPostCalculated}\n                    height={heightPostCalculated}\n                    style={{\n                      position: 'absolute', left: 0, top: 0, overflow: 'visible',\n                    }}\n                  >\n                    <RootComponent\n                      refsHandler={this.createRefsHandler(\n                        placeholder,\n                        changeBBox,\n                        {\n                          getWidth: orientation !== HORIZONTAL\n                            ? getCorrectSize(position) : getCurrentSize,\n                          getHeight: orientation === HORIZONTAL\n                            ? getCorrectSize(position) : getCurrentSize,\n                          getXCorrection: orientation !== HORIZONTAL\n                            ? getCorrection(position) : getZeroCoord,\n                          getYCorrection: orientation === HORIZONTAL\n                            ? getCorrection(position) : getZeroCoord,\n                        },\n                      )}\n                      x={-xCorrection}\n                      y={-yCorrection}\n                    >\n                      {\n                      coordinates.ticks.map(({\n                        x1, x2, y1, y2, key,\n                      }) => (\n                        <TickComponent\n                          key={key}\n                          x1={x1}\n                          x2={x2}\n                          y1={y1}\n                          y2={y2}\n                        />\n                      ))\n                    }\n                      <LineComponent\n                        width={widthPostCalculated}\n                        height={heightPostCalculated}\n                        orientation={orientation}\n                      />\n                      {coordinates.ticks.map(({\n                        text,\n                        xText,\n                        yText,\n                        dominantBaseline,\n                        textAnchor,\n                        key,\n                      }) => (\n                        <React.Fragment key={key}>\n                          <LabelComponent\n                            text={text}\n                            x={xText}\n                            y={yText}\n                            dominantBaseline={dominantBaseline}\n                            textAnchor={textAnchor}\n                          />\n                        </React.Fragment>\n                      ))}\n                    </RootComponent>\n                  </svg>\n                </div>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nRawAxis.propTypes = {\n  name: PropTypes.string.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n  tickComponent: PropTypes.func.isRequired,\n  labelComponent: PropTypes.func.isRequired,\n  lineComponent: PropTypes.func.isRequired,\n  position: PropTypes.string.isRequired,\n  tickSize: PropTypes.number,\n  indentFromAxis: PropTypes.number,\n};\n\nRawAxis.defaultProps = {\n  tickSize: 5,\n  indentFromAxis: 10,\n};\n\nRawAxis.components = {\n  rootComponent: 'Root',\n  tickComponent: 'Tick',\n  labelComponent: 'Label',\n  lineComponent: 'Line',\n};\n\nexport const Axis = withComponents({\n  Root, Tick, Label, Line,\n})(RawAxis);\n\n// TODO: It is not axis who defines that argument is HORIZONTAL and value is VERTICAL.\n\n// TODO: Check that only BOTTOM and TOP are accepted.\nexport const ArgumentAxis = withPatchedProps(props => ({\n  position: BOTTOM,\n  ...props,\n  name: ARGUMENT_DOMAIN,\n}))(Axis);\n\n// TODO: Check that only LEFT and RIGHT are accepted.\nexport const ValueAxis = withPatchedProps(props => ({\n  position: LEFT,\n  ...props,\n  name: getValueDomainName(props.name),\n}))(Axis);\n\nArgumentAxis.components = Axis.components;\nValueAxis.components = Axis.components;\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class Line extends React.PureComponent {\n  render() {\n    const {\n      x1, x2, y1, y2, ...restProps\n    } = this.props;\n    return (\n      <path\n        d={`M ${x1} ${y1} L ${x2} ${y2}`}\n        {...restProps}\n      />\n    );\n  }\n}\n\nLine.propTypes = {\n  x1: PropTypes.number.isRequired,\n  x2: PropTypes.number.isRequired,\n  y1: PropTypes.number.isRequired,\n  y2: PropTypes.number.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Template,\n  Plugin,\n  TemplatePlaceholder,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  axisCoordinates, HORIZONTAL, TOP, LEFT, ARGUMENT_DOMAIN, getValueDomainName,\n} from '@devexpress/dx-chart-core';\nimport { Line } from '../templates/grid/line';\nimport { withPatchedProps, withComponents } from '../utils';\n\nclass RawGrid extends React.PureComponent {\n  render() {\n    const {\n      name,\n      lineComponent: LineComponent,\n      ...restProps\n    } = this.props;\n    return (\n      <Plugin name=\"Grid\">\n        <Template name=\"series\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              domains,\n              scales,\n              layouts,\n            }) => {\n              const domain = domains[name];\n              const scale = scales[name];\n              const { orientation } = domain;\n              const {\n                width, height,\n              } = layouts.pane;\n\n              const coordinates = axisCoordinates(\n                domain,\n                scale,\n                orientation === HORIZONTAL ? TOP : LEFT,\n                0,\n                undefined,\n              );\n\n              return ((\n                <React.Fragment>\n                  {coordinates.ticks.map(({\n                    x1, x2, y1, y2, key,\n                  }) => (\n                    <LineComponent\n                      key={key}\n                      x1={orientation === HORIZONTAL ? x1 : width}\n                      x2={x2}\n                      y1={orientation === HORIZONTAL ? height : y1}\n                      y2={y2}\n                      {...restProps}\n                    />\n                  ))}\n                </React.Fragment>\n              ));\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nRawGrid.propTypes = {\n  name: PropTypes.string.isRequired,\n  lineComponent: PropTypes.func.isRequired,\n};\n\nRawGrid.components = {\n  lineComponent: 'Line',\n};\n\nexport const Grid = withComponents({ Line })(RawGrid);\n\nexport const ArgumentGrid = withPatchedProps(props => ({\n  ...props,\n  name: ARGUMENT_DOMAIN,\n}))(Grid);\n\nexport const ValueGrid = withPatchedProps(props => ({\n  ...props,\n  name: getValueDomainName(props.name),\n}))(Grid);\n\nArgumentGrid.components = Grid.components;\nValueGrid.components = Grid.components;\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Plugin,\n  Template,\n  Getter,\n  TemplatePlaceholder,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport { buildEventHandlers } from '@devexpress/dx-chart-core';\n\nconst wrapToList = arg => (arg ? [arg] : []);\n\nconst EVENT_NAME_MAP = {\n  click: 'onClick',\n  pointermove: 'onPointerMove',\n  pointerleave: 'onPointerLeave',\n};\n\nconst translateEventNames = (handlers) => {\n  const result = {};\n  Object.entries(handlers).forEach(([name, handler]) => {\n    result[EVENT_NAME_MAP[name]] = handler;\n  });\n  return result;\n};\n\n// eslint-disable-next-line react/no-multi-comp\nexport class EventTracker extends React.PureComponent {\n  render() {\n    const { onClick, onPointerMove } = this.props;\n    return (\n      <Plugin name=\"EventTracker\">\n        <Getter name=\"clickHandlers\" value={wrapToList(onClick)} />\n        <Getter name=\"pointerMoveHandlers\" value={wrapToList(onPointerMove)} />\n        <Template name=\"canvas\">\n          <TemplateConnector>\n            {({ series, clickHandlers, pointerMoveHandlers }) => {\n              const handlers = buildEventHandlers(series, { clickHandlers, pointerMoveHandlers });\n              return <TemplatePlaceholder params={translateEventNames(handlers)} />;\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nEventTracker.propTypes = {\n  onClick: PropTypes.func,\n  onPointerMove: PropTypes.func,\n};\n\nEventTracker.defaultProps = {\n  onClick: undefined,\n  onPointerMove: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Plugin,\n  Getter,\n} from '@devexpress/dx-react-core';\nimport {\n  changeSeriesState, processPointerMove, getHoverTargets, HOVERED,\n} from '@devexpress/dx-chart-core';\n\nexport class HoverState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: props.hover || props.defaultHover,\n    };\n    const handlePointerMove = this.handlePointerMove.bind(this);\n    this.getPointerMoveHandlers = ({ pointerMoveHandlers }) => [\n      ...pointerMoveHandlers, handlePointerMove,\n    ];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return { hover: props.hover !== undefined ? props.hover : state.hover };\n  }\n\n  handlePointerMove({ targets }) {\n    const { onHoverChange } = this.props;\n    const { hover: currentTarget } = this.state;\n    const hover = processPointerMove(targets, currentTarget, onHoverChange);\n    if (hover !== undefined) {\n      this.setState({ hover });\n    }\n  }\n\n  render() {\n    const { hover } = this.state;\n    // Function has to be recreated every time as there is no other way\n    // to notify that \"series\" is updated.\n    const getSeries = ({ series }) => changeSeriesState(series, getHoverTargets(hover), HOVERED);\n    return (\n      <Plugin name=\"HoverState\">\n        <Getter name=\"pointerMoveHandlers\" computed={this.getPointerMoveHandlers} />\n        <Getter name=\"series\" computed={getSeries} />\n      </Plugin>\n    );\n  }\n}\n\nHoverState.propTypes = {\n  defaultHover: PropTypes.shape({\n    series: PropTypes.string.isRequired,\n    point: PropTypes.number,\n  }),\n  hover: PropTypes.shape({\n    series: PropTypes.string.isRequired,\n    point: PropTypes.number,\n  }),\n  onHoverChange: PropTypes.func,\n};\n\nHoverState.defaultProps = {\n  defaultHover: undefined,\n  hover: undefined,\n  onHoverChange: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Plugin,\n  Getter,\n} from '@devexpress/dx-react-core';\nimport { changeSeriesState, SELECTED } from '@devexpress/dx-chart-core';\n\nexport class SelectionState extends React.PureComponent {\n  render() {\n    const { selection } = this.props;\n    const getSeries = ({ series }) => changeSeriesState(series, selection, SELECTED);\n    return (\n      <Plugin name=\"SelectionState\">\n        <Getter name=\"series\" computed={getSeries} />\n      </Plugin>\n    );\n  }\n}\n\nSelectionState.propTypes = {\n  selection: PropTypes.arrayOf(PropTypes.shape({\n    series: PropTypes.string.isRequired,\n    point: PropTypes.number,\n  })),\n};\n\nSelectionState.defaultProps = {\n  selection: [],\n};\n"],"names":["BasicData","data","React.createElement","Getter","style","propTypes","PropTypes","isRequired","getDomains","axes","series","computeDomains","getScales","domains","layouts","scaleExtension","buildScales","pane","getSeries","scales","stacks","scaleSeriesPoints","ChartCore","AxesLayout","display","flexDirection","flexGrow","TOP","TemplatePlaceholder","LEFT","RIGHT","BOTTOM","SpaceFillingRects","placeholders","props","map","name","positions","split","horizontal","postfix","width","React","PaneLayout","state","height","changeBBox","setState","placeholder","bBox","_","flex","zIndex","handleSizeUpdate","size","params","position","left","top","overflow","LayoutManager","bBoxes","stateHelper","createStateHelper","applyFieldReducer","bind","Root","rootComponent","restProps","stateBBoxes","Action","defaultProps","ComponentLayout","Palette","scheme","children","undefined","Label","x","y","makeBoundComponent","Target","components","exposed","Component","Object","assign","withComponents","entries","forEach","fieldName","componentName","component","keys","length","getRenderProps","uniqueName","axisName","argumentField","valueField","palette","symbolName","isStartedFromZero","getValueDomain","createHitTester","declareSeries","pluginName","parameters","Symbol","seriesItem","addSeries","getAnimatedStyle","currentSeries","findSeriesByName","currentScales","xScale","ARGUMENT_DOMAIN","yScale","getValueDomainName","Series","seriesComponent","points","Path","Point","pointComponent","withPatchedProps","patch","RawChart","Chart","Marker","color","RawLegend","MarkerComponent","markerComponent","labelComponent","Item","itemComponent","getItems","getters","text","getLegendItems","Legend","Title","Text","textComponent","Scale","extensions","computeExtension","type","constructor","Stack","offset","order","getStackedSeries","stackOffsetDiverging","stackOrderNone","Animation","buildAnimatedStyleGetter","withStates","ComponentWithStates","stateFunc","states","result","Pattern","id","opacity","withPattern","getPatternId","patternId","RawArea","path","coordinates","index","getAreaAnimationStyle","Area","HOVERED","SELECTED","AreaSeries","getPointTransformer","BarCollection","item","toString","dBar","RawBar","argument","value","seriesIndex","barWidth","Bar","BarSeries","RawPath","strokeWidth","LineSeries","SliceCollection","innerRadius","outerRadius","getPieAnimationStyle","RawSlice","startAngle","endAngle","d","Slice","PieSeries","PointCollection","point","getAttributes","pointAttributes","getScatterAnimationStyle","RawPoint","stroke","fill","ScatterSeries","SplineSeries","refsHandler","Tick","x1","x2","y1","y2","dominantBaseline","textAnchor","Line","orientation","getZeroCoord","getCorrectSize","coord","side","getCorrection","getCurrentSize","RawAxis","xCorrection","yCorrection","createRefsHandler","getWidth","getHeight","getXCorrection","getYCorrection","el","getBBox","stateWidth","stateHeight","defaultWidth","defaultHeight","calculatedWidth","calculatedHeight","node","getBoundingClientRect","containerWidth","containerHeight","tickSize","indentFromAxis","RootComponent","TickComponent","tickComponent","LabelComponent","LineComponent","lineComponent","getAxes","axesData","domain","scale","Error","widthCalculated","heightCalculated","calculateLayout","widthPostCalculated","heightPostCalculated","postCalculatedScale","copy","range","HORIZONTAL","axisCoordinates","ticks","key","xText","yText","Axis","ArgumentAxis","ValueAxis","RawGrid","Grid","ArgumentGrid","ValueGrid","wrapToList","arg","EVENT_NAME_MAP","click","pointermove","pointerleave","translateEventNames","handlers","handler","EventTracker","onClick","onPointerMove","clickHandlers","pointerMoveHandlers","buildEventHandlers","HoverState","hover","defaultHover","handlePointerMove","getPointerMoveHandlers","targets","onHoverChange","currentTarget","processPointerMove","changeSeriesState","getHoverTargets","SelectionState","selection"],"mappings":"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"}