{"version":3,"file":"dx-react-chart.es.js","sources":["../src/plugins/basic-data.jsx","../src/plugins/chart-core.jsx","../src/plugins/axes-layout.jsx","../src/plugins/space-filling-rects.jsx","../src/plugins/pane-layout.jsx","../src/plugins/layout-manager.jsx","../src/plugins/component-layout.jsx","../src/plugins/palette.jsx","../src/templates/layout.jsx","../src/templates/label.jsx","../src/utils/series-component.jsx","../src/utils/series-helper.jsx","../src/utils/patch-props.jsx","../src/chart.jsx","../src/templates/legend/marker.jsx","../src/plugins/legend.jsx","../src/plugins/title.jsx","../src/plugins/scale.jsx","../src/plugins/stack.jsx","../src/plugins/animation.jsx","../src/utils/with-states.jsx","../src/templates/pattern.jsx","../src/utils/with-pattern.jsx","../src/templates/series/area.jsx","../src/plugins/area-series.jsx","../src/templates/series/bar-collection.jsx","../src/templates/series/bar.jsx","../src/plugins/bar-series.jsx","../src/templates/series/path.jsx","../src/plugins/line-series.jsx","../src/templates/series/slice-collection.jsx","../src/templates/series/slice.jsx","../src/plugins/pie-series.jsx","../src/templates/series/point-collection.jsx","../src/templates/series/point.jsx","../src/plugins/scatter-series.jsx","../src/plugins/spline-series.jsx","../src/templates/axis/root.jsx","../src/templates/axis/tick.jsx","../src/templates/axis/label.jsx","../src/templates/axis/line.jsx","../src/plugins/axis.jsx","../src/templates/grid/line.jsx","../src/plugins/grid.jsx","../src/plugins/event-tracker.jsx","../src/plugins/hover-state.jsx","../src/plugins/selection-state.jsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\n\nexport const BasicData = ({ data }) => (\n  <Plugin name=\"Basis\">\n    <Getter name=\"data\" value={data} />\n    <Getter name=\"series\" value={[]} />\n    <Getter name=\"axes\" value={[]} />\n    <Getter name=\"getAnimatedStyle\" value={style => style} />\n  </Plugin>\n);\n\nBasicData.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n","import * as React from 'react';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { computeDomains, buildScales, scaleSeriesPoints } from '@devexpress/dx-chart-core';\n\nconst getDomains = ({ axes, series }) => computeDomains(axes, series);\n\nconst getScales = ({ domains, layouts, scaleExtension }) => buildScales(\n  domains, scaleExtension, layouts.pane,\n);\n\nconst getSeries = ({\n  series,\n  scales,\n  // TODO: The following are BarSeries specifics - remove them.\n  stacks,\n  scaleExtension,\n}) => scaleSeriesPoints(series, scales, stacks, scaleExtension);\n\nexport const ChartCore = () => (\n  <Plugin>\n    <Getter name=\"domains\" computed={getDomains} />\n    <Getter name=\"scales\" computed={getScales} />\n    <Getter name=\"series\" computed={getSeries} />\n  </Plugin>\n);\n","import * as React from 'react';\nimport {\n  TOP, BOTTOM, LEFT, RIGHT,\n} from '@devexpress/dx-chart-core';\nimport { Plugin, Template, TemplatePlaceholder } from '@devexpress/dx-react-core';\n\nexport const AxesLayout = () => (\n  <Plugin>\n    <Template name=\"canvas\">\n      <div id=\"center-center\" style={{ display: 'flex', flexDirection: 'column', flexGrow: 1 }}>\n        <div id={`${TOP}-axis-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n          <TemplatePlaceholder name={`${TOP}-${LEFT}-axis`} />\n          <TemplatePlaceholder name={`${TOP}-axis`} />\n          <TemplatePlaceholder name={`${TOP}-${RIGHT}-axis`} />\n        </div>\n        <div id=\"center-axis-container\" style={{ display: 'flex', flexDirection: 'row', flexGrow: 1 }}>\n          <TemplatePlaceholder name={`${LEFT}-axis`} />\n          <TemplatePlaceholder />\n          <TemplatePlaceholder name={`${RIGHT}-axis`} />\n        </div>\n        <div id={`${BOTTOM}-axis-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n          <TemplatePlaceholder name={`${BOTTOM}-${LEFT}-axis`} />\n          <TemplatePlaceholder name={`${BOTTOM}-axis`} />\n          <TemplatePlaceholder name={`${BOTTOM}-${RIGHT}-axis`} />\n        </div>\n      </div>\n    </Template>\n  </Plugin>\n);\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Plugin, Template, TemplateConnector } from '@devexpress/dx-react-core';\n\nexport class SpaceFillingRects extends React.PureComponent {\n  render() {\n    const { placeholders } = this.props;\n    return (\n      <Plugin name=\"SpaceFillingRects\">\n        {placeholders.map(name => (\n          <Template name={name} key={name}>\n            <TemplateConnector>\n              {({ layouts: positions }) => {\n                const [, horizontal, postfix] = name.split('-');\n                const { width } = positions[horizontal + (postfix ? `-${postfix}` : '')] || {};\n                return <div id={name} style={{ width }} />;\n              }}\n            </TemplateConnector>\n          </Template>\n        ))}\n      </Plugin>\n    );\n  }\n}\n\nSpaceFillingRects.propTypes = {\n  placeholders: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplateConnector,\n  TemplatePlaceholder,\n  Sizer,\n} from '@devexpress/dx-react-core';\n\n/* eslint-disable-next-line react/prefer-stateless-function */\nexport class PaneLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 800,\n      height: 600,\n    };\n  }\n\n  handleSizeUpdate({ width, height }, changeBBox) {\n    this.setState({ width, height });\n    changeBBox({ placeholder: 'pane', bBox: { width, height } });\n  }\n\n  render() {\n    const {\n      width,\n      height,\n    } = this.state;\n\n    return (\n      <Plugin name=\"PaneLayout\">\n        <Template name=\"canvas\">\n          {params => (\n            <TemplateConnector>\n              {(_, { changeBBox }) => (\n                <Sizer\n                  style={{ flex: 1, zIndex: 1 }}\n                  onSizeChange={size => this.handleSizeUpdate(size, changeBBox)}\n                >\n                  <div style={{ width: '100%' }}>\n                    <svg\n                      {...params}\n                      width={width}\n                      height={height}\n                      style={{\n                        position: 'absolute', left: 0, top: 0, overflow: 'visible',\n                      }}\n                    >\n                      <TemplatePlaceholder name=\"series\" />\n                    </svg>\n                  </div>\n                </Sizer>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Plugin,\n  Getter,\n  Action,\n  Template,\n  TemplatePlaceholder,\n  createStateHelper,\n} from '@devexpress/dx-react-core';\nimport { bBoxes } from '@devexpress/dx-chart-core';\n\nexport class LayoutManager extends React.Component {\n  constructor(props) {\n    super(props);\n    const { width, height } = this.props;\n\n    this.state = { bBoxes: { pane: { width, height } } };\n\n    const stateHelper = createStateHelper(this);\n\n    this.changeBBox = stateHelper.applyFieldReducer.bind(\n      stateHelper,\n      'bBoxes',\n      bBoxes,\n    );\n  }\n\n  render() {\n    const {\n      width, height, rootComponent: Root, ...restProps\n    } = this.props;\n    const { bBoxes: stateBBoxes } = this.state;\n\n    return (\n      <Plugin>\n        <Getter name=\"layouts\" value={stateBBoxes} />\n        <Action name=\"changeBBox\" action={this.changeBBox} />\n\n        <Template name=\"root\">\n          <Root\n            height={height}\n            width={width}\n            {...restProps}\n          >\n            <TemplatePlaceholder name=\"canvas\" />\n          </Root>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nLayoutManager.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n};\n\nLayoutManager.defaultProps = {\n  width: 0,\n};\n","import * as React from 'react';\nimport {\n  TOP, BOTTOM, LEFT, RIGHT,\n} from '@devexpress/dx-chart-core';\nimport { Plugin, Template, TemplatePlaceholder } from '@devexpress/dx-react-core';\n\nexport const ComponentLayout = () => (\n  <Plugin name=\"ComponentLayout\">\n    <Template name=\"canvas\">\n      <div id={`${TOP}-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n        <TemplatePlaceholder name={`${TOP}-${LEFT}`} />\n        <TemplatePlaceholder name={TOP} />\n        <TemplatePlaceholder name={`${TOP}-${LEFT}`} />\n      </div>\n      <div id=\"center-container\" style={{ display: 'flex', flexDirection: 'row', flexGrow: 1 }}>\n        <TemplatePlaceholder name={LEFT} />\n        <TemplatePlaceholder />\n        <TemplatePlaceholder name={RIGHT} />\n      </div>\n      <div id={`${BOTTOM}-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n        <TemplatePlaceholder name={`${BOTTOM}-${LEFT}`} />\n        <TemplatePlaceholder name={BOTTOM} />\n      </div>\n    </Template>\n  </Plugin>\n);\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\n\n// TODO: Remove \"palette\" getter from BasicData and add Palette to Chart\n// when \"paletteComputing\" is removed.\nexport class Palette extends React.PureComponent {\n  render() {\n    const { scheme } = this.props;\n    return (\n      <Plugin name=\"Palette\">\n        <Getter name=\"palette\" value={scheme} />\n      </Plugin>\n    );\n  }\n}\n\nPalette.propTypes = {\n  scheme: PropTypes.array.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class Root extends React.PureComponent {\n  render() {\n    const {\n      children, width, height, style, ...restProps\n    } = this.props;\n\n    return (\n      <div\n        style={{\n          ...style,\n          height: `${height}px`,\n          ...width ? { width: `${width}px` } : null,\n        }}\n        {...restProps}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\nRoot.propTypes = {\n  children: PropTypes.node,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  style: PropTypes.object,\n};\n\nRoot.defaultProps = {\n  children: undefined,\n  style: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class Label extends React.PureComponent {\n  render() {\n    return (\n      <text {...this.props} />\n    );\n  }\n}\n\nLabel.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n};\n","import * as React from 'react';\n\nconst makeBoundComponent = (Target, components, exposed) => {\n  class Component extends React.PureComponent {\n    render() {\n      return <Target {...components} {...this.props} />;\n    }\n  }\n  Component.components = Target.components;\n  Object.assign(Component, exposed);\n  return Component;\n};\n\nexport const withComponents = components => (Target) => {\n  const props = {};\n  const exposed = {};\n  Object.entries(Target.components).forEach(([fieldName, componentName]) => {\n    const component = components[componentName];\n    if (component && component !== Target[componentName]) {\n      props[fieldName] = component;\n    }\n    exposed[componentName] = component || Target[componentName];\n  });\n  return Object.keys(props).length > 0\n    ? makeBoundComponent(Target, props, exposed) : Target;\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Template,\n  Plugin,\n  Getter,\n  TemplatePlaceholder,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  findSeriesByName, addSeries, getValueDomainName, ARGUMENT_DOMAIN,\n} from '@devexpress/dx-chart-core';\nimport { withComponents } from './series-component';\n\n// May be it is better to say what props are passed along rather then what are NOT passed?\nconst getRenderProps = (series) => {\n  const {\n    name,\n    uniqueName,\n    axisName,\n    argumentField,\n    valueField,\n    palette,\n    symbolName,\n    isStartedFromZero,\n    getValueDomain, // TODO: Temporary - see corresponding note in *computeDomains*.\n    createHitTester,\n    ...restProps\n  } = series;\n\n  return restProps;\n};\n\nexport const declareSeries = (pluginName, { components, ...parameters }) => {\n  class Component extends React.PureComponent {\n    render() {\n      const { name } = this.props;\n      const symbolName = Symbol(name);\n      const seriesItem = {\n        ...parameters,\n        ...this.props,\n        symbolName,\n      };\n      const getSeries = ({ series, data, palette }) => addSeries(series, data, palette, seriesItem);\n      return (\n        <Plugin name={pluginName}>\n          <Getter name=\"series\" computed={getSeries} />\n          <Template name=\"series\">\n            <TemplatePlaceholder />\n            <TemplateConnector>\n              {({ series, scales, getAnimatedStyle }) => {\n                const currentSeries = findSeriesByName(symbolName, series);\n                const currentScales = {\n                  xScale: scales[ARGUMENT_DOMAIN],\n                  yScale: scales[getValueDomainName(currentSeries.axisName)],\n                };\n                const { seriesComponent: Series, points, ...props } = getRenderProps(currentSeries);\n                return (\n                  <Series\n                    coordinates={points}\n                    scales={currentScales}\n                    getAnimatedStyle={getAnimatedStyle}\n                    {...props}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          </Template>\n        </Plugin>\n      );\n    }\n  }\n  Component.propTypes = {\n    name: PropTypes.string,\n    /* eslint-disable react/no-unused-prop-types */\n    valueField: PropTypes.string.isRequired,\n    argumentField: PropTypes.string.isRequired,\n    /* eslint-enable react/no-unused-prop-types */\n  };\n  Component.defaultProps = {\n    name: 'defaultSeriesName',\n  };\n  Component.components = {};\n  if (components.Path) {\n    Component.components.seriesComponent = 'Path';\n  }\n  if (components.Point) {\n    Component.components.pointComponent = 'Point';\n  }\n  return withComponents(components)(Component);\n};\n","import * as React from 'react';\n\nexport const withPatchedProps = patch => (Target) => {\n  class Component extends React.PureComponent {\n    render() {\n      const props = patch(this.props);\n      return <Target {...props} />;\n    }\n  }\n  return Component;\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { PluginHost } from '@devexpress/dx-react-core';\nimport {\n  TOP, BOTTOM, LEFT, RIGHT,\n} from '@devexpress/dx-chart-core';\n\nimport { BasicData } from './plugins/basic-data';\nimport { ChartCore } from './plugins/chart-core';\nimport { AxesLayout } from './plugins/axes-layout';\nimport { SpaceFillingRects } from './plugins/space-filling-rects';\nimport { PaneLayout } from './plugins/pane-layout';\nimport { LayoutManager } from './plugins/layout-manager';\nimport { ComponentLayout } from './plugins/component-layout';\nimport { Palette } from './plugins/palette';\nimport { Root } from './templates/layout';\nimport { Label } from './templates/label';\nimport { withComponents } from './utils';\n\nclass RawChart extends React.PureComponent {\n  render() {\n    const {\n      data,\n      width,\n      height,\n      children,\n      rootComponent,\n      ...restProps\n    } = this.props;\n    return ((\n      <PluginHost>\n        <BasicData data={data} />\n        <Palette scheme={[]} />\n        <LayoutManager\n          width={width}\n          height={height}\n          rootComponent={rootComponent}\n          {...restProps}\n        />\n        <PaneLayout />\n        <AxesLayout />\n        <ComponentLayout />\n        <SpaceFillingRects placeholders={[\n          `${TOP}-${LEFT}`,\n          `${TOP}-${RIGHT}`,\n          `${BOTTOM}-${LEFT}`,\n          `${BOTTOM}-${RIGHT}`,\n          `${TOP}-${LEFT}-axis`,\n          `${TOP}-${RIGHT}-axis`,\n          `${BOTTOM}-${LEFT}-axis`,\n          `${BOTTOM}-${RIGHT}-axis`,\n        ]}\n        />\n        {children}\n        <ChartCore />\n\n      </PluginHost>\n    ));\n  }\n}\nRawChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  children: PropTypes.node,\n};\n\nRawChart.defaultProps = {\n  height: 500,\n  width: undefined,\n  children: null,\n};\n\nRawChart.components = {\n  rootComponent: 'Root',\n};\n\nexport const Chart = withComponents({ Root })(RawChart);\nChart.Label = Label;\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class Marker extends React.PureComponent {\n  render() {\n    const { color, ...restProps } = this.props;\n    return (\n      <svg fill={color} width=\"10\" height=\"10\" {...restProps}>\n        <circle r={5} cx={5} cy={5} {...restProps} />\n      </svg>);\n  }\n}\n\nMarker.propTypes = {\n  color: PropTypes.string,\n};\n\nMarker.defaultProps = {\n  color: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Plugin,\n  TemplateConnector,\n  Template,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport { getLegendItems } from '@devexpress/dx-chart-core';\nimport { Marker } from '../templates/legend/marker';\nimport { withComponents } from '../utils';\n\nclass RawLegend extends React.PureComponent {\n  render() {\n    const {\n      markerComponent: MarkerComponent,\n      labelComponent: Label,\n      rootComponent: Root,\n      itemComponent: Item,\n      position,\n      getItems,\n    } = this.props;\n    const placeholder = position;\n    return (\n      <Plugin name=\"Legend\">\n        <Template name={placeholder}>\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {getters => (\n              <Root name={`legend-${placeholder}`}>\n                {getItems(getters).map(({ text, color }) => (\n                  <Item key={text}>\n                    <MarkerComponent name={text} color={color} />\n                    <Label text={text} />\n                  </Item>\n                ))}\n              </Root>\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nRawLegend.propTypes = {\n  markerComponent: PropTypes.func.isRequired,\n  labelComponent: PropTypes.func.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  position: PropTypes.string,\n  getItems: PropTypes.func,\n};\n\nRawLegend.defaultProps = {\n  position: 'right',\n  getItems: ({ series }) => getLegendItems(series),\n};\n\nRawLegend.components = {\n  rootComponent: 'Root',\n  itemComponent: 'Item',\n  markerComponent: 'Marker',\n  labelComponent: 'Label',\n};\n\nexport const Legend = withComponents({ Marker })(RawLegend);\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\n\nexport class Title extends React.PureComponent {\n  render() {\n    const {\n      textComponent: Text,\n      text,\n      position,\n      ...restProps\n    } = this.props;\n    const placeholder = position;\n    return (\n      <Plugin name=\"Title\">\n        <Template name={placeholder}>\n          <TemplatePlaceholder />\n          <Text text={text} {...restProps} />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTitle.propTypes = {\n  textComponent: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  position: PropTypes.string,\n};\n\nTitle.defaultProps = {\n  position: 'top',\n};\n\nTitle.components = {\n  textComponent: 'Text',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { computeExtension } from '@devexpress/dx-chart-core';\n\nexport class Scale extends React.PureComponent {\n  render() {\n    const { extensions } = this.props;\n    return (\n      <Plugin name=\"Scale\">\n        <Getter name=\"scaleExtension\" value={computeExtension(extensions)} />\n      </Plugin>\n    );\n  }\n}\n\nScale.propTypes = {\n  extensions: PropTypes.arrayOf(PropTypes.shape({\n    type: PropTypes.string,\n    constructor: PropTypes.func,\n  })),\n};\n\nScale.defaultProps = {\n  extensions: [],\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { getStackedSeries } from '@devexpress/dx-chart-core';\nimport {\n  stackOrderNone,\n  stackOffsetDiverging,\n} from 'd3-shape';\n\nexport class Stack extends React.PureComponent {\n  render() {\n    const { stacks, offset, order } = this.props;\n    const params = { stacks, offset, order };\n    const getSeries = ({ series, data }) => getStackedSeries(series, data, params);\n    return (\n      <Plugin name=\"Stack\">\n        <Getter name=\"series\" computed={getSeries} />\n      </Plugin>\n    );\n  }\n}\n\nStack.propTypes = {\n  stacks: PropTypes.arrayOf(PropTypes.shape({\n    series: PropTypes.arrayOf(PropTypes.string).isRequired,\n  })),\n  offset: PropTypes.func,\n  order: PropTypes.func,\n};\n\nStack.defaultProps = {\n  stacks: [],\n  offset: stackOffsetDiverging,\n  order: stackOrderNone,\n};\n","import * as React from 'react';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { buildAnimatedStyleGetter } from '@devexpress/dx-chart-core';\n\n/* eslint-disable-next-line react/prefer-stateless-function */\nexport class Animation extends React.PureComponent {\n  render() {\n    return (\n      <Plugin name=\"Animation\">\n        <Getter name=\"getAnimatedStyle\" value={buildAnimatedStyleGetter} />\n      </Plugin>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport const withStates = states => (Component) => {\n  class ComponentWithStates extends React.PureComponent {\n    render() {\n      const { state, ...restProps } = this.props;\n      const stateFunc = states[state];\n      const result = stateFunc ? stateFunc(restProps) : restProps;\n      return React.isValidElement(result) ? result : <Component {...result} />;\n    }\n  }\n  ComponentWithStates.propTypes = {\n    state: PropTypes.string,\n  };\n  ComponentWithStates.defaultProps = {\n    state: undefined,\n  };\n  return ComponentWithStates;\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class Pattern extends React.PureComponent {\n  render() {\n    const {\n      id, size, color, opacity,\n    } = this.props;\n    return (\n      <defs>\n        <pattern\n          id={id}\n          width={size}\n          height={size}\n          patternUnits=\"userSpaceOnUse\"\n        >\n          <rect x={0} y={0} width={size} height={size} fill={color} opacity={opacity} />\n          <path\n            d={`M ${size / 2} ${-size / 2} L ${-size / 2} ${size / 2} M 0 ${size} L ${size} 0 M ${size * 1.5} ${size / 2} L ${size / 2} ${size * 1.5}`}\n            strokeWidth={2}\n            stroke={color}\n          />\n        </pattern>\n      </defs>\n    );\n  }\n}\n\nPattern.propTypes = {\n  id: PropTypes.string.isRequired,\n  size: PropTypes.number,\n  color: PropTypes.string.isRequired,\n  opacity: PropTypes.number,\n};\n\nPattern.defaultProps = {\n  size: 6,\n  opacity: 0.75,\n};\n","import * as React from 'react';\nimport { Pattern } from '../templates/pattern';\n\n// Function is returned (not PureComponent descendant) because\n// result is invoked as function (not as React component).\nexport const withPattern = (getPatternId, props) => Target => ({ color, ...restProps }) => {\n  const patternId = getPatternId(restProps);\n  return (\n    <React.Fragment>\n      <Target\n        fill={`url(#${patternId})`}\n        {...restProps}\n      />\n      <Pattern\n        id={patternId}\n        color={color}\n        {...props}\n      />\n    </React.Fragment>\n  );\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getAreaAnimationStyle, HOVERED, SELECTED } from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\nimport { withPattern } from '../../utils/with-pattern';\n\nclass RawArea extends React.PureComponent {\n  render() {\n    const {\n      path,\n      coordinates,\n      color,\n      index,\n      style,\n      getAnimatedStyle,\n      scales,\n      ...restProps\n    } = this.props;\n    return (\n      <path\n        d={path(coordinates)}\n        fill={color}\n        opacity={0.5}\n        style={getAnimatedStyle(style, getAreaAnimationStyle, scales)}\n        {...restProps}\n      />\n    );\n  }\n}\n\nRawArea.propTypes = {\n  path: PropTypes.func.isRequired,\n  coordinates: PropTypes.array.isRequired,\n  color: PropTypes.string,\n  style: PropTypes.object,\n};\n\nRawArea.defaultProps = {\n  color: undefined,\n  style: undefined,\n};\n\nexport const Area = withStates({\n  [HOVERED]: withPattern(\n    ({ index }) => `series-${index}-hover`, { opacity: 0.75 },\n  )(RawArea),\n  [SELECTED]: withPattern(\n    ({ index }) => `series-${index}-selection`, { opacity: 0.5 },\n  )(RawArea),\n})(RawArea);\n","import {\n  dArea as path,\n  getAreaPointTransformer as getPointTransformer,\n  createAreaHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { Area as Path } from '../templates/series/area';\n\nexport const AreaSeries = declareSeries('AreaSeries', {\n  components: { Path },\n  path,\n  isStartedFromZero: true,\n  getPointTransformer,\n  createHitTester,\n});\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n// TODO: Is it fine to have it hard coded or should there be `path` property?\nimport { getAreaAnimationStyle, dBar } from '@devexpress/dx-chart-core';\n\nexport class BarCollection extends React.PureComponent {\n  render() {\n    const {\n      pointComponent: Point,\n      path, // Not used - see note above.\n      coordinates,\n      index,\n      style,\n      scales,\n      getAnimatedStyle,\n      state,\n      ...restProps\n    } = this.props;\n    return (coordinates.map(item => (\n      <Point\n        key={item.index.toString()}\n        style={getAnimatedStyle(style, getAreaAnimationStyle, scales)}\n        seriesIndex={index}\n        {...restProps}\n        {...dBar(item)}\n        {...item}\n      />\n    )));\n  }\n}\n\nBarCollection.propTypes = {\n  pointComponent: PropTypes.func.isRequired,\n  style: PropTypes.object,\n};\n\nBarCollection.defaultProps = {\n  style: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { HOVERED, SELECTED } from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\nimport { withPattern } from '../../utils/with-pattern';\n\nclass RawBar extends React.PureComponent {\n  render() {\n    const {\n      argument, value, index, seriesIndex, barWidth, color, ...restProps\n    } = this.props;\n    return (\n      <rect fill={color} {...restProps} />\n    );\n  }\n}\n\nRawBar.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n  color: PropTypes.string,\n};\n\nRawBar.defaultProps = {\n  color: undefined,\n};\n\nexport const Bar = withStates({\n  [HOVERED]: withPattern(\n    ({ seriesIndex, index }) => `series-${seriesIndex}-point-${index}-hover`, { opacity: 0.75 },\n  )(RawBar),\n  [SELECTED]: withPattern(\n    ({ seriesIndex, index }) => `series-${seriesIndex}-point-${index}-selection`, { opacity: 0.5 },\n  )(RawBar),\n})(RawBar);\n","import {\n  getBarPointTransformer as getPointTransformer,\n  createBarHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { BarCollection as Path } from '../templates/series/bar-collection';\nimport { Bar as Point } from '../templates/series/bar';\n\nexport const BarSeries = declareSeries('BarSeries', {\n  components: { Path, Point },\n  isStartedFromZero: true,\n  getPointTransformer,\n  createHitTester,\n});\n\nBarSeries.defaultProps = {\n  barWidth: 0.9,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getAreaAnimationStyle, HOVERED, SELECTED } from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\n\nclass RawPath extends React.PureComponent {\n  render() {\n    const {\n      path,\n      coordinates,\n      color,\n      index,\n      style,\n      getAnimatedStyle,\n      scales,\n      ...restProps\n    } = this.props;\n    return (\n      <path\n        d={path(coordinates)}\n        fill=\"none\"\n        strokeWidth={2}\n        stroke={color}\n        style={getAnimatedStyle(style, getAreaAnimationStyle, scales)}\n        {...restProps}\n      />\n    );\n  }\n}\n\nRawPath.propTypes = {\n  path: PropTypes.func.isRequired,\n  coordinates: PropTypes.array.isRequired,\n  color: PropTypes.string,\n  style: PropTypes.object,\n};\n\nRawPath.defaultProps = {\n  color: undefined,\n  style: undefined,\n};\n\nexport const Path = withStates({\n  [HOVERED]: props => ({ strokeWidth: 4, ...props }),\n  [SELECTED]: props => ({ strokeWidth: 4, ...props }),\n})(RawPath);\n","import {\n  dLine as path,\n  getAreaPointTransformer as getPointTransformer,\n  createLineHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { Path } from '../templates/series/path';\n\nexport const LineSeries = declareSeries('LineSeries', {\n  components: { Path },\n  path,\n  getPointTransformer,\n  createHitTester,\n});\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getPieAnimationStyle } from '@devexpress/dx-chart-core';\n\n// TODO: Is it fine to have it hard coded or should there be `path` property?\nexport class SliceCollection extends React.PureComponent {\n  render() {\n    const {\n      pointComponent: Point,\n      path, // Not used - see note above.\n      coordinates,\n      index,\n      uniqueName,\n      style,\n      getAnimatedStyle,\n      scales,\n      innerRadius,\n      outerRadius,\n      state,\n      ...restProps\n    } = this.props;\n    return (\n      <g transform={`translate(${coordinates[0].x} ${coordinates[0].y})`}>\n        {coordinates.map(item => (\n          <Point\n            key={item.index.toString()}\n            style={getAnimatedStyle(style, getPieAnimationStyle, scales, item)}\n            seriesIndex={index}\n            {...restProps}\n            {...item}\n          />\n        ))}\n      </g>);\n  }\n}\n\nSliceCollection.propTypes = {\n  pointComponent: PropTypes.func.isRequired,\n  style: PropTypes.object,\n};\n\nSliceCollection.defaultProps = {\n  style: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { HOVERED, SELECTED } from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\nimport { withPattern } from '../../utils/with-pattern';\n\nclass RawSlice extends React.PureComponent {\n  render() {\n    const {\n      argument, value, index, seriesIndex, innerRadius, outerRadius, startAngle, endAngle,\n      x, y, d, color, ...restProps\n    } = this.props;\n    return (\n      <path\n        fill={color}\n        stroke=\"none\"\n        d={d}\n        {...restProps}\n      />\n    );\n  }\n}\n\nRawSlice.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  d: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  style: PropTypes.object,\n  color: PropTypes.string,\n};\n\nRawSlice.defaultProps = {\n  style: {},\n  color: undefined,\n};\n\nexport const Slice = withStates({\n  [HOVERED]: withPattern(\n    ({ seriesIndex, index }) => `series-${seriesIndex}-point-${index}-hover`, { opacity: 0.75 },\n  )(RawSlice),\n  [SELECTED]: withPattern(\n    ({ seriesIndex, index }) => `series-${seriesIndex}-point-${index}-selection`, { opacity: 0.5 },\n  )(RawSlice),\n})(RawSlice);\n","import {\n  getPiePointTransformer as getPointTransformer,\n  createPieHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { SliceCollection as Path } from '../templates/series/slice-collection';\nimport { Slice as Point } from '../templates/series/slice';\n\nexport const PieSeries = declareSeries('PieSeries', {\n  components: { Path, Point },\n  getPointTransformer,\n  createHitTester,\n});\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n// TODO: Is it fine to have it hard coded or should there be `path` property?\nimport { pointAttributes, getScatterAnimationStyle } from '@devexpress/dx-chart-core';\n\nexport class PointCollection extends React.PureComponent {\n  render() {\n    const {\n      pointComponent: Point,\n      path, // Not used - see note above.\n      coordinates,\n      point = {},\n      style,\n      getAnimatedStyle,\n      scales,\n      state,\n      ...restProps\n    } = this.props;\n    const getAttributes = pointAttributes(point);\n    return (coordinates.map(item => (\n      <Point\n        key={item.index.toString()}\n        style={getAnimatedStyle(style, getScatterAnimationStyle, scales)}\n        {...restProps}\n        {...getAttributes(item)}\n        {...item}\n      />\n    )));\n  }\n}\n\nPointCollection.propTypes = {\n  pointComponent: PropTypes.func.isRequired,\n  style: PropTypes.object,\n};\n\nPointCollection.defaultProps = {\n  style: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { HOVERED, SELECTED } from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\n\nclass RawPoint extends React.PureComponent {\n  render() {\n    const {\n      argument, value, index, x, y, color, ...restProps\n    } = this.props;\n    // *d* attribute is calculated during points scaling.\n    // TODO: Do it here - d={path().size(size).type(type)()}\n    return (\n      <path\n        fill={color}\n        stroke=\"none\"\n        transform={`translate(${x} ${y})`}\n        {...restProps}\n      />\n    );\n  }\n}\n\nRawPoint.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n  color: PropTypes.string,\n};\n\nRawPoint.defaultProps = {\n  color: undefined,\n};\n\nexport const Point = withStates({\n  [HOVERED]: ({ color, ...restProps }) => ({\n    stroke: color,\n    strokeWidth: 4,\n    fill: 'none',\n    // size: 12, Awaiting TODO from above.\n    ...restProps,\n  }),\n  [SELECTED]: ({ color, ...restProps }) => ({\n    stroke: color,\n    strokeWidth: 4,\n    fill: 'none',\n    // size: 12, Awaiting TODO from above.\n    ...restProps,\n  }),\n})(RawPoint);\n","import {\n  getAreaPointTransformer as getPointTransformer,\n  createScatterHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { PointCollection as Path } from '../templates/series/point-collection';\nimport { Point } from '../templates/series/point';\n\nexport const ScatterSeries = declareSeries('ScatterSeries', {\n  components: { Path, Point },\n  getPointTransformer,\n  createHitTester,\n});\n","import {\n  dSpline as path,\n  getAreaPointTransformer as getPointTransformer,\n  createSplineHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { Path } from '../templates/series/path';\n\nexport const SplineSeries = declareSeries('SplineSeries', {\n  components: { Path },\n  path,\n  getPointTransformer,\n  createHitTester,\n});\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class Root extends React.PureComponent {\n  render() {\n    const {\n      x, y, refsHandler, children, ...restProps\n    } = this.props;\n    return (\n      <g\n        ref={refsHandler}\n        transform={`translate(${x} ${y})`}\n        {...restProps}\n      >\n        {children}\n      </g>\n    );\n  }\n}\n\nRoot.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  refsHandler: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class Tick extends React.PureComponent {\n  render() {\n    const {\n      x1, x2, y1, y2, ...restProps\n    } = this.props;\n    return (\n      <path\n        d={`M ${x1} ${y1} L ${x2} ${y2}`}\n        {...restProps}\n      />\n    );\n  }\n}\n\nTick.propTypes = {\n  x1: PropTypes.number.isRequired,\n  x2: PropTypes.number.isRequired,\n  y1: PropTypes.number.isRequired,\n  y2: PropTypes.number.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class Label extends React.PureComponent {\n  render() {\n    const {\n      text, x, y, dominantBaseline, textAnchor, ...restProps\n    } = this.props;\n\n    return (\n      <text\n        dominantBaseline={dominantBaseline}\n        textAnchor={textAnchor}\n        x={x}\n        y={y}\n        {...restProps}\n      >\n        {text}\n      </text>\n    );\n  }\n}\n\nLabel.propTypes = {\n  text: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  dominantBaseline: PropTypes.string.isRequired,\n  textAnchor: PropTypes.string.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class Line extends React.PureComponent {\n  render() {\n    const {\n      width, height, orientation, ...restProps\n    } = this.props;\n    return (\n      <path\n        d={`M 0 0 L ${orientation === 'horizontal' ? width : 0} ${orientation === 'horizontal' ? 0 : height}`}\n        {...restProps}\n      />\n    );\n  }\n}\n\nLine.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  orientation: PropTypes.string.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Plugin,\n  TemplateConnector,\n  Template,\n  TemplatePlaceholder,\n  Getter,\n} from '@devexpress/dx-react-core';\nimport {\n  axisCoordinates, HORIZONTAL, LEFT, BOTTOM, ARGUMENT_DOMAIN, getValueDomainName, axesData,\n} from '@devexpress/dx-chart-core';\nimport { Root } from '../templates/axis/root';\nimport { Tick } from '../templates/axis/tick';\nimport { Label } from '../templates/axis/label';\nimport { Line } from '../templates/axis/line';\nimport { withPatchedProps, withComponents } from '../utils';\n\nconst getZeroCoord = () => 0;\nconst getCorrectSize = position => ((position === 'left' || position === 'top') ? coord => -coord : (coord, side) => side + coord);\nconst getCorrection = position => ((position === 'left' || position === 'top') ? coord => coord : getZeroCoord);\nconst getCurrentSize = (_, side) => side;\n\nclass RawAxis extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      xCorrection: 0,\n      yCorrection: 0,\n    };\n    this.createRefsHandler = this.createRefsHandler.bind(this);\n  }\n\n  createRefsHandler(placeholder, changeBBox, {\n    getWidth, getHeight, getXCorrection, getYCorrection,\n  }) {\n    return (el) => {\n      if (!el) {\n        return;\n      }\n      const {\n        width, height, x, y,\n      } = el.getBBox();\n      const { width: stateWidth, height: stateHeight } = this.state;\n\n      if (width === stateWidth && height === stateHeight) return;\n      changeBBox({\n        placeholder,\n        bBox: {\n          width: getWidth(x, width),\n          height: getHeight(y, height),\n        },\n      });\n      this.setState({\n        width,\n        height,\n        xCorrection: getXCorrection(x),\n        yCorrection: getYCorrection(y),\n      });\n    };\n  }\n\n  calculateLayout(width, height, defaultWidth, defaultHeight) {\n    const calculatedWidth = width || defaultWidth;\n    const calculatedHeight = height || defaultHeight;\n    const {\n      width: containerWidth,\n      height: containerHeight,\n    } = (this.node && this.node.getBoundingClientRect()) || {};\n\n    return {\n      width: containerWidth || calculatedWidth,\n      height: containerHeight || calculatedHeight,\n    };\n  }\n\n  render() {\n    const {\n      tickSize,\n      position,\n      name,\n      indentFromAxis,\n      rootComponent: RootComponent,\n      tickComponent: TickComponent,\n      labelComponent: LabelComponent,\n      lineComponent: LineComponent,\n    } = this.props;\n    const getAxes = ({ axes }) => axesData(axes, this.props);\n    return (\n      <Plugin name=\"Axis\">\n        <Getter name=\"axes\" computed={getAxes} />\n        <Template name={`${position}-axis`}>\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              domains,\n              scales,\n              layouts,\n            }, {\n              changeBBox,\n            }) => {\n              // TODO: Take axis from \"axes\" getter rather then from closure.\n              const placeholder = `${position}-axis`;\n              const domain = domains[name];\n              const scale = scales[name];\n              // TODO_DEBUG\n              if (!domain) { throw new Error(`domain is not found: ${name}`); }\n              // TODO_DEBUG\n              const { orientation } = domain;\n              const { width: widthCalculated, height: heightCalculated } = layouts[placeholder]\n                    || { width: 0, height: 0 };\n\n              const {\n                width: widthPostCalculated,\n                height: heightPostCalculated,\n              } = this.calculateLayout(\n                widthCalculated,\n                heightCalculated,\n                0,\n                0,\n              );\n              // Isn't it too late to adjust sizes?\n              const postCalculatedScale = scale.copy().range(\n                orientation === HORIZONTAL ? [0, widthPostCalculated] : [heightPostCalculated, 0],\n              );\n              const coordinates = axisCoordinates(\n                // TODO: Only *orientation* and *tickFormat* are taken from *domain* -\n                // take *tickFormat* directly from props.\n                domain,\n                postCalculatedScale,\n                position,\n                tickSize,\n                indentFromAxis,\n              );\n              const {\n                xCorrection,\n                yCorrection,\n              } = this.state;\n\n              return (\n                <div\n                  style={{\n                    position: 'relative',\n                    width: orientation === HORIZONTAL ? undefined : widthCalculated,\n                    height: orientation === HORIZONTAL ? heightCalculated : null,\n                    flexGrow: orientation === HORIZONTAL ? 1 : undefined,\n                  }}\n                  ref={(node) => { this.node = node; }}\n                >\n                  <svg\n                    width={widthPostCalculated}\n                    height={heightPostCalculated}\n                    style={{\n                      position: 'absolute', left: 0, top: 0, overflow: 'visible',\n                    }}\n                  >\n                    <RootComponent\n                      refsHandler={this.createRefsHandler(\n                        placeholder,\n                        changeBBox,\n                        {\n                          getWidth: orientation !== HORIZONTAL\n                            ? getCorrectSize(position) : getCurrentSize,\n                          getHeight: orientation === HORIZONTAL\n                            ? getCorrectSize(position) : getCurrentSize,\n                          getXCorrection: orientation !== HORIZONTAL\n                            ? getCorrection(position) : getZeroCoord,\n                          getYCorrection: orientation === HORIZONTAL\n                            ? getCorrection(position) : getZeroCoord,\n                        },\n                      )}\n                      x={-xCorrection}\n                      y={-yCorrection}\n                    >\n                      {\n                      coordinates.ticks.map(({\n                        x1, x2, y1, y2, key,\n                      }) => (\n                        <TickComponent\n                          key={key}\n                          x1={x1}\n                          x2={x2}\n                          y1={y1}\n                          y2={y2}\n                        />\n                      ))\n                    }\n                      <LineComponent\n                        width={widthPostCalculated}\n                        height={heightPostCalculated}\n                        orientation={orientation}\n                      />\n                      {coordinates.ticks.map(({\n                        text,\n                        xText,\n                        yText,\n                        dominantBaseline,\n                        textAnchor,\n                        key,\n                      }) => (\n                        <React.Fragment key={key}>\n                          <LabelComponent\n                            text={text}\n                            x={xText}\n                            y={yText}\n                            dominantBaseline={dominantBaseline}\n                            textAnchor={textAnchor}\n                          />\n                        </React.Fragment>\n                      ))}\n                    </RootComponent>\n                  </svg>\n                </div>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nRawAxis.propTypes = {\n  name: PropTypes.string.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n  tickComponent: PropTypes.func.isRequired,\n  labelComponent: PropTypes.func.isRequired,\n  lineComponent: PropTypes.func.isRequired,\n  position: PropTypes.string.isRequired,\n  tickSize: PropTypes.number,\n  indentFromAxis: PropTypes.number,\n};\n\nRawAxis.defaultProps = {\n  tickSize: 5,\n  indentFromAxis: 10,\n};\n\nRawAxis.components = {\n  rootComponent: 'Root',\n  tickComponent: 'Tick',\n  labelComponent: 'Label',\n  lineComponent: 'Line',\n};\n\nexport const Axis = withComponents({\n  Root, Tick, Label, Line,\n})(RawAxis);\n\n// TODO: It is not axis who defines that argument is HORIZONTAL and value is VERTICAL.\n\n// TODO: Check that only BOTTOM and TOP are accepted.\nexport const ArgumentAxis = withPatchedProps(props => ({\n  position: BOTTOM,\n  ...props,\n  name: ARGUMENT_DOMAIN,\n}))(Axis);\n\n// TODO: Check that only LEFT and RIGHT are accepted.\nexport const ValueAxis = withPatchedProps(props => ({\n  position: LEFT,\n  ...props,\n  name: getValueDomainName(props.name),\n}))(Axis);\n\nArgumentAxis.components = Axis.components;\nValueAxis.components = Axis.components;\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class Line extends React.PureComponent {\n  render() {\n    const {\n      x1, x2, y1, y2, ...restProps\n    } = this.props;\n    return (\n      <path\n        d={`M ${x1} ${y1} L ${x2} ${y2}`}\n        {...restProps}\n      />\n    );\n  }\n}\n\nLine.propTypes = {\n  x1: PropTypes.number.isRequired,\n  x2: PropTypes.number.isRequired,\n  y1: PropTypes.number.isRequired,\n  y2: PropTypes.number.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Template,\n  Plugin,\n  TemplatePlaceholder,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  axisCoordinates, HORIZONTAL, TOP, LEFT, ARGUMENT_DOMAIN, getValueDomainName,\n} from '@devexpress/dx-chart-core';\nimport { Line } from '../templates/grid/line';\nimport { withPatchedProps, withComponents } from '../utils';\n\nclass RawGrid extends React.PureComponent {\n  render() {\n    const {\n      name,\n      lineComponent: LineComponent,\n      ...restProps\n    } = this.props;\n    return (\n      <Plugin name=\"Grid\">\n        <Template name=\"series\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              domains,\n              scales,\n              layouts,\n            }) => {\n              const domain = domains[name];\n              const scale = scales[name];\n              const { orientation } = domain;\n              const {\n                width, height,\n              } = layouts.pane;\n\n              const coordinates = axisCoordinates(\n                domain,\n                scale,\n                orientation === HORIZONTAL ? TOP : LEFT,\n                0,\n                undefined,\n              );\n\n              return ((\n                <React.Fragment>\n                  {coordinates.ticks.map(({\n                    x1, x2, y1, y2, key,\n                  }) => (\n                    <LineComponent\n                      key={key}\n                      x1={orientation === HORIZONTAL ? x1 : width}\n                      x2={x2}\n                      y1={orientation === HORIZONTAL ? height : y1}\n                      y2={y2}\n                      {...restProps}\n                    />\n                  ))}\n                </React.Fragment>\n              ));\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nRawGrid.propTypes = {\n  name: PropTypes.string.isRequired,\n  lineComponent: PropTypes.func.isRequired,\n};\n\nRawGrid.components = {\n  lineComponent: 'Line',\n};\n\nexport const Grid = withComponents({ Line })(RawGrid);\n\nexport const ArgumentGrid = withPatchedProps(props => ({\n  ...props,\n  name: ARGUMENT_DOMAIN,\n}))(Grid);\n\nexport const ValueGrid = withPatchedProps(props => ({\n  ...props,\n  name: getValueDomainName(props.name),\n}))(Grid);\n\nArgumentGrid.components = Grid.components;\nValueGrid.components = Grid.components;\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Plugin,\n  Template,\n  Getter,\n  TemplatePlaceholder,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport { buildEventHandlers } from '@devexpress/dx-chart-core';\n\nconst wrapToList = arg => (arg ? [arg] : []);\n\nconst EVENT_NAME_MAP = {\n  click: 'onClick',\n  pointermove: 'onPointerMove',\n  pointerleave: 'onPointerLeave',\n};\n\nconst translateEventNames = (handlers) => {\n  const result = {};\n  Object.entries(handlers).forEach(([name, handler]) => {\n    result[EVENT_NAME_MAP[name]] = handler;\n  });\n  return result;\n};\n\n// eslint-disable-next-line react/no-multi-comp\nexport class EventTracker extends React.PureComponent {\n  render() {\n    const { onClick, onPointerMove } = this.props;\n    return (\n      <Plugin name=\"EventTracker\">\n        <Getter name=\"clickHandlers\" value={wrapToList(onClick)} />\n        <Getter name=\"pointerMoveHandlers\" value={wrapToList(onPointerMove)} />\n        <Template name=\"canvas\">\n          <TemplateConnector>\n            {({ series, clickHandlers, pointerMoveHandlers }) => {\n              const handlers = buildEventHandlers(series, { clickHandlers, pointerMoveHandlers });\n              return <TemplatePlaceholder params={translateEventNames(handlers)} />;\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nEventTracker.propTypes = {\n  onClick: PropTypes.func,\n  onPointerMove: PropTypes.func,\n};\n\nEventTracker.defaultProps = {\n  onClick: undefined,\n  onPointerMove: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Plugin,\n  Getter,\n} from '@devexpress/dx-react-core';\nimport {\n  changeSeriesState, processPointerMove, getHoverTargets, HOVERED,\n} from '@devexpress/dx-chart-core';\n\nexport class HoverState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: props.hover || props.defaultHover,\n    };\n    const handlePointerMove = this.handlePointerMove.bind(this);\n    this.getPointerMoveHandlers = ({ pointerMoveHandlers }) => [\n      ...pointerMoveHandlers, handlePointerMove,\n    ];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return { hover: props.hover !== undefined ? props.hover : state.hover };\n  }\n\n  handlePointerMove({ targets }) {\n    const { onHoverChange } = this.props;\n    const { hover: currentTarget } = this.state;\n    const hover = processPointerMove(targets, currentTarget, onHoverChange);\n    if (hover !== undefined) {\n      this.setState({ hover });\n    }\n  }\n\n  render() {\n    const { hover } = this.state;\n    // Function has to be recreated every time as there is no other way\n    // to notify that \"series\" is updated.\n    const getSeries = ({ series }) => changeSeriesState(series, getHoverTargets(hover), HOVERED);\n    return (\n      <Plugin name=\"HoverState\">\n        <Getter name=\"pointerMoveHandlers\" computed={this.getPointerMoveHandlers} />\n        <Getter name=\"series\" computed={getSeries} />\n      </Plugin>\n    );\n  }\n}\n\nHoverState.propTypes = {\n  defaultHover: PropTypes.shape({\n    series: PropTypes.string.isRequired,\n    point: PropTypes.number,\n  }),\n  hover: PropTypes.shape({\n    series: PropTypes.string.isRequired,\n    point: PropTypes.number,\n  }),\n  onHoverChange: PropTypes.func,\n};\n\nHoverState.defaultProps = {\n  defaultHover: undefined,\n  hover: undefined,\n  onHoverChange: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Plugin,\n  Getter,\n} from '@devexpress/dx-react-core';\nimport { changeSeriesState, SELECTED } from '@devexpress/dx-chart-core';\n\nexport class SelectionState extends React.PureComponent {\n  render() {\n    const { selection } = this.props;\n    const getSeries = ({ series }) => changeSeriesState(series, selection, SELECTED);\n    return (\n      <Plugin name=\"SelectionState\">\n        <Getter name=\"series\" computed={getSeries} />\n      </Plugin>\n    );\n  }\n}\n\nSelectionState.propTypes = {\n  selection: PropTypes.arrayOf(PropTypes.shape({\n    series: PropTypes.string.isRequired,\n    point: PropTypes.number,\n  })),\n};\n\nSelectionState.defaultProps = {\n  selection: [],\n};\n"],"names":["BasicData","data","React.createElement","style","propTypes","PropTypes","isRequired","getDomains","axes","series","computeDomains","getScales","domains","layouts","scaleExtension","buildScales","pane","getSeries","scales","stacks","scaleSeriesPoints","ChartCore","AxesLayout","display","flexDirection","flexGrow","TOP","LEFT","RIGHT","BOTTOM","SpaceFillingRects","placeholders","props","map","name","positions","split","horizontal","postfix","width","React","PaneLayout","state","changeBBox","height","setState","placeholder","bBox","_","flex","zIndex","handleSizeUpdate","size","params","left","top","overflow","LayoutManager","bBoxes","stateHelper","createStateHelper","applyFieldReducer","bind","Root","rootComponent","restProps","stateBBoxes","defaultProps","ComponentLayout","Palette","scheme","children","undefined","Label","makeBoundComponent","Target","components","exposed","Component","assign","withComponents","entries","forEach","fieldName","componentName","component","Object","keys","length","getRenderProps","uniqueName","axisName","argumentField","valueField","palette","symbolName","isStartedFromZero","getValueDomain","createHitTester","declareSeries","pluginName","parameters","Symbol","seriesItem","addSeries","getAnimatedStyle","currentSeries","findSeriesByName","currentScales","ARGUMENT_DOMAIN","getValueDomainName","Series","seriesComponent","points","Path","Point","pointComponent","withPatchedProps","patch","RawChart","Chart","Marker","color","RawLegend","MarkerComponent","markerComponent","labelComponent","Item","itemComponent","position","getItems","getters","text","getLegendItems","Legend","Title","Text","textComponent","Scale","extensions","computeExtension","Stack","offset","order","getStackedSeries","stackOffsetDiverging","stackOrderNone","Animation","buildAnimatedStyleGetter","withStates","ComponentWithStates","stateFunc","states","result","Pattern","id","opacity","withPattern","getPatternId","patternId","RawArea","path","coordinates","index","getAreaAnimationStyle","Area","HOVERED","SELECTED","AreaSeries","BarCollection","item","toString","dBar","RawBar","argument","value","seriesIndex","barWidth","Bar","BarSeries","RawPath","strokeWidth","LineSeries","SliceCollection","innerRadius","outerRadius","x","y","getPieAnimationStyle","RawSlice","startAngle","endAngle","d","Slice","PieSeries","PointCollection","point","getAttributes","pointAttributes","getScatterAnimationStyle","RawPoint","ScatterSeries","SplineSeries","refsHandler","Tick","x1","x2","y1","y2","dominantBaseline","textAnchor","Line","orientation","getZeroCoord","getCorrectSize","coord","side","getCorrection","getCurrentSize","RawAxis","createRefsHandler","getWidth","getHeight","getXCorrection","getYCorrection","el","getBBox","stateWidth","stateHeight","defaultWidth","defaultHeight","calculatedWidth","calculatedHeight","node","getBoundingClientRect","containerWidth","containerHeight","tickSize","indentFromAxis","RootComponent","TickComponent","tickComponent","LabelComponent","LineComponent","lineComponent","getAxes","axesData","domain","scale","Error","widthCalculated","heightCalculated","calculateLayout","widthPostCalculated","heightPostCalculated","postCalculatedScale","copy","range","HORIZONTAL","axisCoordinates","xCorrection","yCorrection","ticks","key","xText","yText","Axis","ArgumentAxis","ValueAxis","RawGrid","Grid","ArgumentGrid","ValueGrid","wrapToList","arg","EVENT_NAME_MAP","translateEventNames","handlers","handler","EventTracker","onClick","onPointerMove","clickHandlers","pointerMoveHandlers","buildEventHandlers","HoverState","hover","defaultHover","handlePointerMove","getPointerMoveHandlers","targets","onHoverChange","currentTarget","processPointerMove","changeSeriesState","getHoverTargets","SelectionState","selection"],"mappings":"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"}