{"version":3,"file":"dx-react-chart-material-ui.es.js","sources":["../src/templates/utils.jsx","../src/templates/layout.jsx","../src/templates/label.jsx","../src/chart.jsx","../src/templates/legend/root.jsx","../src/templates/legend/label.jsx","../src/templates/legend/item.jsx","../src/plugins/legend.jsx","../src/templates/title/text.jsx","../src/plugins/title.jsx","../src/templates/series/point.jsx","../src/plugins/scatter-series.jsx","../src/templates/grid/line.jsx","../src/plugins/value-grid.jsx","../src/plugins/argument-grid.jsx","../src/templates/axis/root.jsx","../src/templates/axis/tick.jsx","../src/templates/axis/label.jsx","../src/templates/axis/line.jsx","../src/plugins/value-axis.jsx","../src/plugins/argument-axis.jsx"],"sourcesContent":["import { withPatchedProps } from '@devexpress/dx-react-chart';\nimport { darken, fade, lighten } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\nexport const getBorderColor = theme => (\n  theme.palette.type === 'light'\n    ? lighten(fade(theme.palette.divider, 1), 0.88)\n    : darken(fade(theme.palette.divider, 1), 0.68)\n);\n\nexport const withClassName = (...args) => {\n  const setClassName = ({ className, classes, ...restProps }) => ({\n    className: classNames(classes.root, className),\n    ...restProps,\n  });\n  // TODO: First candidate to `compose` util?\n  return Target => withStyles(...args)(withPatchedProps(setClassName)(Target));\n};\n","import { Chart } from '@devexpress/dx-react-chart';\nimport { withClassName } from './utils';\n\nconst styles = (theme) => {\n  const { fontFamily, fontSize, fontWeightLight } = theme.typography;\n  return ({\n    root: {\n      fontFamily,\n      fontSize,\n      fontWeight: fontWeightLight,\n      display: 'flex',\n      flexDirection: 'column',\n      padding: '10px',\n    },\n  });\n};\n\nexport const Root = withClassName(styles)(Chart.Root);\n","import { Chart } from '@devexpress/dx-react-chart';\nimport { withClassName } from './utils';\n\nconst styles = (theme) => {\n  const { fontFamily } = theme.typography;\n  return ({\n    root: {\n      fill: theme.palette.text.secondary,\n      fontFamily,\n      fontSize: 12,\n      fontWeight: 400,\n    },\n  });\n};\n\nexport const Label = withClassName(styles)(Chart.Label);\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Chart as ChartBase, withComponents, Palette,\n} from '@devexpress/dx-react-chart';\nimport { Root } from './templates/layout';\nimport { Label } from './templates/label';\n\nconst palette = ['#42A5F5', '#FF7043', '#9CCC65', '#FFCA28', '#26A69A', '#EC407A'];\n\nconst ChartWithPalette = ({ children, ...props }) => (\n  <ChartBase\n    {...props}\n  >\n    <Palette scheme={palette} />\n    {children}\n  </ChartBase>\n);\n\nChartWithPalette.components = ChartBase.components;\n\nChartWithPalette.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport const Chart = withComponents({ Root })(ChartWithPalette);\nChart.Label = Label;\n","import List from '@material-ui/core/List';\nimport { withClassName } from '../utils';\n\nconst styles = () => ({\n  root: {\n    paddingTop: 16,\n    paddingBottom: 16,\n  },\n});\n\nexport const Root = withClassName(styles, { name: 'LegendRoot' })(List);\n","import * as React from 'react';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withClassName } from '../utils';\n\nconst styles = () => ({\n  root: {\n    fontSize: 14,\n    paddingLeft: 8,\n    paddingRight: 8,\n  },\n});\n\nexport const Label = withClassName(styles, { name: 'LegendLabel' })(\n  ({ text, ...restProps }) => <ListItemText {...restProps}>{text}</ListItemText>,\n);\n","import ListItem from '@material-ui/core/ListItem';\nimport { withClassName } from '../utils';\n\nconst styles = theme => ({\n  root: {\n    alignItems: 'center',\n    paddingTop: theme.spacing.unit * 0.5,\n    paddingBottom: theme.spacing.unit * 0.5,\n  },\n});\n\nexport const Item = withClassName(styles, { name: 'LegendItem' })(ListItem);\n","import { Legend as LegendBase, withComponents } from '@devexpress/dx-react-chart';\nimport { Root } from '../templates/legend/root';\nimport { Label } from '../templates/legend/label';\nimport { Item } from '../templates/legend/item';\n\nexport const Legend = withComponents({\n  Root, Item, Label,\n})(LegendBase);\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport class Text extends React.PureComponent {\n  render() {\n    const { text, ...restProps } = this.props;\n    return (\n      <Typography component=\"h3\" variant=\"h5\" {...restProps}>\n        {text}\n      </Typography>\n    );\n  }\n}\n\nText.propTypes = {\n  text: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\n","import { Title as TitleBase, withComponents } from '@devexpress/dx-react-chart';\nimport { Text } from '../templates/title/text';\n\nexport const Title = withComponents({ Text })(TitleBase);\n","import { ScatterSeries, withPatchedProps } from '@devexpress/dx-react-chart';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\nconst styles = theme => ({\n  point: {\n    fill: theme.palette.background.paper,\n  },\n});\n\nconst setClassName = ({ classes, ...restProps }) => {\n  if (restProps.state) {\n    const { className, ...rest } = restProps;\n    return {\n      className: classNames(classes.point, className),\n      ...rest,\n    };\n  }\n  return restProps;\n};\n\nexport const Point = withStyles(styles)(\n  withPatchedProps(setClassName)(\n    ScatterSeries.Point,\n  ),\n);\n","import { ScatterSeries as ScatterSeriesBase, withComponents } from '@devexpress/dx-react-chart';\nimport { Point } from '../templates/series/point';\n\nexport const ScatterSeries = withComponents({ Point })(ScatterSeriesBase);\n","import { Grid } from '@devexpress/dx-react-chart';\nimport { withClassName, getBorderColor } from '../utils';\n\nconst styles = theme => ({\n  root: {\n    stroke: getBorderColor(theme),\n    shapeRendering: 'crispEdges',\n  },\n});\n\nexport const Line = withClassName(styles)(Grid.Line);\n","import { ValueGrid as ValueGridBase, withComponents } from '@devexpress/dx-react-chart';\nimport { Line } from '../templates/grid/line';\n\nexport const ValueGrid = withComponents({ Line })(ValueGridBase);\n","import { ArgumentGrid as ArgumentGridBase, withComponents } from '@devexpress/dx-react-chart';\nimport { Line } from '../templates/grid/line';\n\nexport const ArgumentGrid = withComponents({ Line })(ArgumentGridBase);\n","import { Axis } from '@devexpress/dx-react-chart';\nimport { withClassName } from '../utils';\n\nconst styles = () => ({\n  root: {\n    shapeRendering: 'crispEdges',\n  },\n});\n\nexport const Root = withClassName(styles)(Axis.Root);\n","import { Axis } from '@devexpress/dx-react-chart';\nimport { withClassName, getBorderColor } from '../utils';\n\nconst styles = theme => ({\n  root: {\n    stroke: getBorderColor(theme),\n    shapeRendering: 'crispEdges',\n  },\n});\n\nexport const Tick = withClassName(styles)(Axis.Tick);\n","import { Axis } from '@devexpress/dx-react-chart';\nimport { withClassName } from '../utils';\n\nconst styles = (theme) => {\n  const { fontFamily } = theme.typography;\n  return ({\n    root: {\n      fill: theme.palette.text.secondary,\n      fontFamily,\n      fontSize: 12,\n      fontWeight: 400,\n      backgroundColor: theme.palette.background.paper,\n    },\n  });\n};\n\nexport const Label = withClassName(styles)(Axis.Label);\n","\nimport { Axis } from '@devexpress/dx-react-chart';\nimport { withClassName, getBorderColor } from '../utils';\n\nconst styles = theme => ({\n  root: {\n    stroke: getBorderColor(theme),\n    shapeRendering: 'crispEdges',\n  },\n});\n\nexport const Line = withClassName(styles)(Axis.Line);\n","import { ValueAxis as ValueAxisBase, withComponents } from '@devexpress/dx-react-chart';\nimport { Root } from '../templates/axis/root';\nimport { Tick } from '../templates/axis/tick';\nimport { Label } from '../templates/axis/label';\nimport { Line } from '../templates/axis/line';\n\nexport const ValueAxis = withComponents({\n  Root, Tick, Label, Line,\n})(ValueAxisBase);\n","import { ArgumentAxis as ArgumentAxisBase, withComponents } from '@devexpress/dx-react-chart';\nimport { Root } from '../templates/axis/root';\nimport { Tick } from '../templates/axis/tick';\nimport { Label } from '../templates/axis/label';\nimport { Line } from '../templates/axis/line';\n\nexport const ArgumentAxis = withComponents({\n  Root, Tick, Label, Line,\n})(ArgumentAxisBase);\n"],"names":["getBorderColor","theme","palette","type","lighten","fade","divider","darken","withClassName","args","setClassName","className","classes","restProps","classNames","root","withStyles","withPatchedProps","Target","styles","typography","fontFamily","fontSize","fontWeightLight","Root","Chart","text","secondary","Label","ChartWithPalette","children","props","React.createElement","components","ChartBase","propTypes","PropTypes","isRequired","withComponents","name","List","spacing","unit","Item","ListItem","Legend","LegendBase","Text","React","Title","TitleBase","background","paper","state","rest","point","Point","ScatterSeries","ScatterSeriesBase","Line","Grid","ValueGrid","ValueGridBase","ArgumentGrid","ArgumentGridBase","Axis","Tick","ValueAxis","ValueAxisBase","ArgumentAxis","ArgumentAxisBase"],"mappings":"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"}